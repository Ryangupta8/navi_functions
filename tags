!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ActionCC	navi_manager/include/Dynamic_Manager.h	/^	vector< vector<int> > ActionCC;$/;"	m	class:Dynamic_Manager
ActionCC	navi_manager/include/MDPmanager.h	/^	vector< vector<int> > ActionCC;$/;"	m	class:MDPManager
Action_dim	navi_manager/include/Dynamic_Manager.h	/^ 	int               Action_dim;$/;"	m	class:Dynamic_Manager
Action_dim	navi_manager/include/MDPmanager.h	/^ 	int               Action_dim;$/;"	m	class:MDPManager
BASE_GOAL_TOPIC	navi_manager/scripts/base_move.py	/^BASE_GOAL_TOPIC = "\/move_base\/move\/goal"$/;"	v
BASE_STATE_TOPIC	navi_manager/scripts/base_move.py	/^BASE_STATE_TOPIC = "\/hsrb\/omni_base_controller\/state"$/;"	v
BOUNDED_EXPLORE_LAYER_H_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	2;"	d
BaseMoveCBA	navi_manager/scripts/base_move.py	/^class BaseMoveCBA(object):$/;"	c
Basepos_Callback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Basepos_Callback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:MDPManager
BasisFuns	navi_manager/src/srBSpline.cpp	/^void srBSpline::BasisFuns( OUT double* N, double u )$/;"	f	class:srBSpline
BasisFuns	navi_manager/src/srBSpline.cpp	/^void srBSpline::BasisFuns( OUT double* N, int span, double u )$/;"	f	class:srBSpline
BasisFunsDers	navi_manager/src/srBSpline.cpp	/^bool srBSpline::BasisFunsDers( OUT double** ders, double u, int n )$/;"	f	class:srBSpline
BasisFunsDers	navi_manager/src/srBSpline.cpp	/^bool srBSpline::BasisFunsDers( OUT double** ders, int span, double u, int n )$/;"	f	class:srBSpline
BoolMove	navi_manager/src/base_actionlib.cpp	/^bool BoolMove=false;$/;"	v
BoolUpadated	navi_manager/src/base_conti_actionlib.cpp	/^bool BoolUpadated=false;$/;"	v
BoundedExploreLayer	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^class BoundedExploreLayer : public costmap_2d::Layer, public costmap_2d::Costmap2D$/;"	c	namespace:frontier_exploration
BoundedExploreLayer	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    BoundedExploreLayer::BoundedExploreLayer():marker_seq(0){}$/;"	f	class:frontier_exploration::BoundedExploreLayer
C	navi_manager/include/srBSpline.h	/^	inline double C( double u ) { return CurvePoint( u ); }$/;"	f	class:srBSpline
CBA_GUI_BASE	navi_manager/scripts/base_move.py	/^    CBA_GUI_BASE = BaseMoveCBA(float(sys.argv[1]) if len(sys.argv) > 1 else 0.0)$/;"	v
COSTMAP_TOOLS_H_	frontier_exploration/include/frontier_exploration/costmap_tools.h	2;"	d
CellNum2Coord	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CellNum2Coord(const int Cell_idx, vector<int>& cell_xy)$/;"	f	class:Dynamic_Manager
CellNum2Coord	navi_manager/src/MDPmanager.cpp	/^void MDPManager::CellNum2Coord(const int Cell_idx, vector<int>& cell_xy)$/;"	f	class:MDPManager
CellNum2Coord	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::CellNum2Coord(const int Cell_idx, vector<int>& cell_xy)$/;"	f	class:Dynamic_window
CellNum2globalCoord	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CellNum2globalCoord(const int Cell_idx, std::vector<double>& cell_xy)$/;"	f	class:Dynamic_Manager
CellNum2globalCoord	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::CellNum2globalCoord(const int Cell_idx, std::vector<double>& cell_xy)$/;"	f	class:Dynamic_window
Cell_Info	navi_manager/include/MapParam.h	/^	std::vector<int>    Cell_Info;$/;"	m	class:MapParam
CheckRotation	navi_service/src/map_checker.cpp	/^    bool CheckRotation(double cur_angle, double desired_angle, double err_criterion)$/;"	f	class:Map_Checker
CheckRotation	navi_service/src/obstacle_checker.cpp	/^    bool CheckRotation(double cur_angle, double desired_angle, double err_criterion)$/;"	f	class:Obstacle_Checker
ClickedPointCallback	navi_manager/src/base_conti_actionlib.cpp	/^void ClickedPointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f
Client	navi_manager/include/PathManager.h	/^ typedef actionlib::SimpleActionClient<control_msgs::FollowJointTrajectoryAction> Client;$/;"	t
Client	navi_manager/src/base_actionlib.cpp	/^typedef actionlib::SimpleActionClient<control_msgs::FollowJointTrajectoryAction> Client;$/;"	t	file:
Client	navi_manager/src/base_conti_actionlib.cpp	/^typedef actionlib::SimpleActionClient<control_msgs::FollowJointTrajectoryAction> Client;$/;"	t	file:
ClikedpointCallback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::ClikedpointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
ClikedpointCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::ClikedpointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:MDPManager
ClikedpointCallback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::ClikedpointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:Dynamic_window
ClikedpointCallback	navi_service/src/clicked_navi_test.cpp	/^  void ClikedpointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:click_navi_manager
ClikedpointCallback	navi_service/src/navi_service_node.cpp	/^void villa_navi_srv::ClikedpointCallback(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f	class:villa_navi_srv
CmdIntCallback	navi_manager/src/dynamic_planner.cpp	/^void CmdIntCallback(const std_msgs::Int8::ConstPtr& msg)$/;"	f
Comparetwopoistions	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::Comparetwopoistions(std::vector<double> pos,std::vector<double> pos2, double criterion)$/;"	f	class:Dynamic_Manager
Comparetwopoistions	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::Comparetwopoistions(std::vector<double> pos,std::vector<double> pos2, double criterion)$/;"	f	class:MDPManager
Comparetwopoistions	navi_manager/src/dynamic_window.cpp	/^bool Dynamic_window::Comparetwopoistions(std::vector<double> pos,std::vector<double> pos2, double criterion)$/;"	f	class:Dynamic_window
Coord2CellNum	navi_manager/src/Dynamic_Manager.cpp	/^int  Dynamic_Manager::Coord2CellNum(std::vector<int> cell_xy)$/;"	f	class:Dynamic_Manager
Coord2CellNum	navi_manager/src/MDPmanager.cpp	/^int  MDPManager::Coord2CellNum(std::vector<int> cell_xy)$/;"	f	class:MDPManager
Coord2CellNum	navi_manager/src/dynamic_window.cpp	/^int  Dynamic_window::Coord2CellNum(std::vector<int> cell_xy)$/;"	f	class:Dynamic_window
Coord2CellNum	navi_service/src/map_checker.cpp	/^    int Coord2CellNum(double _x, double _y)$/;"	f	class:Map_Checker
Coord2CellNum	navi_service/src/obstacle_checker.cpp	/^    int Coord2CellNum(double _x, double _y)$/;"	f	class:Obstacle_Checker
CoordinateTansform_Rviz_Dyn_map	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CoordinateTansform_Rviz_Dyn_map(double _x, double _y,vector<int>& dynamicCoord)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Global2_beliefMap	navi_manager/src/Dynamic_Manager.cpp	/^int Dynamic_Manager::CoordinateTransform_Global2_beliefMap(double global_x, double global_y)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Global2_cameraMap	navi_manager/src/Dynamic_Manager.cpp	/^int Dynamic_Manager::CoordinateTransform_Global2_cameraMap(float global_x, float global_y)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Global2_cameraMap	navi_manager/src/dynamic_window.cpp	/^int Dynamic_window::CoordinateTransform_Global2_cameraMap(float global_x, float global_y)$/;"	f	class:Dynamic_window
CoordinateTransform_Rviz_Grid_Goal	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CoordinateTransform_Rviz_Grid_Goal(double _x, double _y,int map_type=0)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Rviz_Grid_Goal	navi_manager/src/MDPmanager.cpp	/^void MDPManager::CoordinateTransform_Rviz_Grid_Goal(double _x, double _y,int map_type=0)$/;"	f	class:MDPManager
CoordinateTransform_Rviz_Grid_Human	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CoordinateTransform_Rviz_Grid_Human(double _x, double _y,int map_type=0)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Rviz_Grid_Human	navi_manager/src/MDPmanager.cpp	/^void MDPManager::CoordinateTransform_Rviz_Grid_Human(double _x, double _y,int map_type=0)$/;"	f	class:MDPManager
CoordinateTransform_Rviz_Grid_Start	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::CoordinateTransform_Rviz_Grid_Start(double _x, double _y,int map_type=0)$/;"	f	class:Dynamic_Manager
CoordinateTransform_Rviz_Grid_Start	navi_manager/src/MDPmanager.cpp	/^void MDPManager::CoordinateTransform_Rviz_Grid_Start(double _x, double _y,int map_type=0)$/;"	f	class:MDPManager
CubicSplineInterpolation	navi_manager/src/srBSpline.cpp	/^void srBSpline::CubicSplineInterpolation( std::vector<double>& t,std::vector<double>& Q, int NumData )$/;"	f	class:srBSpline
CubicSplineInterpolation	navi_manager/src/srBSpline.cpp	/^void srBSpline::CubicSplineInterpolation(double* t,double* Q, int NumData )$/;"	f	class:srBSpline
CubicSplineInterpolationwithecontinuity	navi_manager/src/srBSpline.cpp	/^void srBSpline::CubicSplineInterpolationwithecontinuity( srBSpline* prev_spline,std::vector<double>& t,std::vector<double>& Q, int NumData )$/;"	f	class:srBSpline
CubicSplineInterpolationwithecontinuity	navi_manager/src/srBSpline.cpp	/^void srBSpline::CubicSplineInterpolationwithecontinuity(srBSpline* prev_spline,double* t,double* Q, int NumData )$/;"	f	class:srBSpline
CubicSurfaceInterpolation	navi_manager/src/srBSpline.cpp	/^void srBSpline::CubicSurfaceInterpolation( std::vector<double>& t,std::vector<std::vector<double>>& Q,std::vector<double>& t2,std::vector<double>& W, int NumData_Q , int NumData_W )$/;"	f	class:srBSpline
CurVector	navi_manager/include/Dynamic_Manager.h	/^	std::vector<double> CurVector;$/;"	m	class:Dynamic_Manager
CurVector	navi_manager/include/MDPmanager.h	/^	std::vector<double> CurVector;$/;"	m	class:MDPManager
CurVector	navi_manager/include/dynamic_window.h	/^	std::vector<double> CurVector;$/;"	m	class:Dynamic_window
Cur_existed_human	navi_manager/include/Dynamic_Manager.h	/^    std::vector< std::vector< double > > Cur_existed_human;$/;"	m	class:Dynamic_Manager
Cur_leg_human	navi_manager/include/Dynamic_Manager.h	/^ 	std::vector< std::vector< double > > Cur_leg_human;$/;"	m	class:Dynamic_Manager
Cur_leg_human	navi_manager/include/MDPmanager.h	/^ 	std::vector< std::vector< double > > Cur_leg_human;$/;"	m	class:MDPManager
CurveDerivCpts	navi_manager/src/srBSpline.cpp	/^void srBSpline::CurveDerivCpts( OUT double** PK \/* PK[d+1][r2-r1+1] *\/$/;"	f	class:srBSpline
CurveDerivsAlg1	navi_manager/src/srBSpline.cpp	/^bool srBSpline::CurveDerivsAlg1( OUT double* CK, double u, int d )$/;"	f	class:srBSpline
CurveKnotsIns	navi_manager/src/srBSpline.cpp	/^void srBSpline::CurveKnotsIns(double u, int r )$/;"	f	class:srBSpline
DEG2RAD	navi_manager/include/types.h	/^inline real_s DEG2RAD(double d){ return (d * SR_RADIAN); }$/;"	f
DEG2RAD	navi_manager/include/types.h	/^inline real_s DEG2RAD(float d) { return (d * SR_RADIAN); }$/;"	f
DEG2RAD	navi_manager/include/types.h	/^inline real_s DEG2RAD(int d)	 { return (d * SR_RADIAN); }$/;"	f
DELETEALL	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    static const int DELETEALL = 3;$/;"	m	class:frontier_exploration::BoundedExploreLayer
DYN_OFFSET_X	navi_manager/include/Dynamic_Manager.h	48;"	d
DYN_OFFSET_X	navi_manager/include/MDPmanager.h	48;"	d
DYN_OFFSET_X	navi_manager/include/dynamic_window.h	37;"	d
DYN_OFFSET_X	navi_service/src/map_checker.cpp	23;"	d	file:
DYN_OFFSET_X	navi_service/src/obstacle_checker.cpp	23;"	d	file:
DYN_OFFSET_Y	navi_manager/include/Dynamic_Manager.h	49;"	d
DYN_OFFSET_Y	navi_manager/include/MDPmanager.h	49;"	d
DYN_OFFSET_Y	navi_manager/include/dynamic_window.h	38;"	d
DYN_OFFSET_Y	navi_service/src/map_checker.cpp	24;"	d	file:
DYN_OFFSET_Y	navi_service/src/obstacle_checker.cpp	24;"	d	file:
Distance3D	navi_manager/src/srBSpline.cpp	/^double srBSpline::Distance3D( double* Q1, double* Q2 )$/;"	f	class:srBSpline
Dy_OBS_CELL	navi_manager/include/Dynamic_Manager.h	39;"	d
Dy_OBS_CELL	navi_manager/include/MDPmanager.h	37;"	d
Dyn_MDPPath	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>  Dyn_MDPPath;$/;"	m	class:Dynamic_Manager
Dyn_MDPPath	navi_manager/include/MDPmanager.h	/^ 	vector<int>  Dyn_MDPPath;$/;"	m	class:MDPManager
Dyn_MDPPath	navi_manager/include/dynamic_window.h	/^ 	vector<int>      Dyn_MDPPath;$/;"	m	class:Dynamic_window
Dynamic_Manager	navi_manager/include/Dynamic_Manager.h	/^ 	Dynamic_Manager():maxiter(Maxiteration),Action_dim(8),gamma(1),Ra(ra),publishnum(0),Yolo_iter(0),m_boolSolve(false),OnceTarget(false){}$/;"	f	class:Dynamic_Manager
Dynamic_Manager	navi_manager/include/Dynamic_Manager.h	/^class Dynamic_Manager$/;"	c
Dynamic_Manager	navi_manager/src/Dynamic_Manager.cpp	/^Dynamic_Manager::Dynamic_Manager(MapParam* _pMapParam):maxiter(Maxiteration),Action_dim(8),gamma(1),Ra(ra),publishnum(0),ReceiveData(0),m_boolSolve(false),dyn_path_num(0)$/;"	f	class:Dynamic_Manager
Dynamic_window	navi_manager/include/dynamic_window.h	/^ 	Dynamic_window(){}$/;"	f	class:Dynamic_window
Dynamic_window	navi_manager/include/dynamic_window.h	/^class Dynamic_window$/;"	c
Dynamic_window	navi_manager/src/dynamic_window.cpp	/^Dynamic_window::Dynamic_window(MapParam* _pMapParam)$/;"	f	class:Dynamic_window
FOVW	navi_manager/include/Dynamic_Manager.h	61;"	d
FOVW	navi_manager/include/dynamic_window.h	43;"	d
FREE_CELL	navi_manager/include/Dynamic_Manager.h	37;"	d
FREE_CELL	navi_manager/include/MDPmanager.h	35;"	d
FRONTIER_SEARCH_H_	frontier_exploration/include/frontier_exploration/frontier_search.h	2;"	d
Feature_dim	navi_manager/include/Dynamic_Manager.h	/^ 	int 	          Feature_dim;$/;"	m	class:Dynamic_Manager
Feature_dim	navi_manager/include/MDPmanager.h	/^ 	int 	          Feature_dim;$/;"	m	class:MDPManager
Filtered_leg_human	navi_manager/include/Dynamic_Manager.h	/^ 	std::vector< std::vector< double > > Filtered_leg_human;$/;"	m	class:Dynamic_Manager
FindMaxIdx	navi_manager/src/Dynamic_Manager.cpp	/^int Dynamic_Manager::FindMaxIdx(vector<double> dataset)$/;"	f	class:Dynamic_Manager
FindMaxIdx	navi_manager/src/MDPmanager.cpp	/^int MDPManager::FindMaxIdx(vector<double> dataset)$/;"	f	class:MDPManager
FindMultiplicity	navi_manager/src/srBSpline.cpp	/^int srBSpline::FindMultiplicity(double _u)$/;"	f	class:srBSpline
FrontierExplorationClient	frontier_exploration/src/explore_client.cpp	/^    FrontierExplorationClient() :$/;"	f	class:frontier_exploration::FrontierExplorationClient
FrontierExplorationClient	frontier_exploration/src/explore_client.cpp	/^class FrontierExplorationClient{$/;"	c	namespace:frontier_exploration	file:
FrontierExplorationServer	frontier_exploration/src/explore_server.cpp	/^    FrontierExplorationServer(std::string name) :$/;"	f	class:frontier_exploration::FrontierExplorationServer
FrontierExplorationServer	frontier_exploration/src/explore_server.cpp	/^class FrontierExplorationServer$/;"	c	namespace:frontier_exploration	file:
FrontierSearch	frontier_exploration/include/frontier_exploration/frontier_search.h	/^class FrontierSearch{$/;"	c	namespace:frontier_exploration
FrontierSearch	frontier_exploration/src/frontier_search.cpp	/^FrontierSearch::FrontierSearch(costmap_2d::Costmap2D &costmap, int min_frontier_size, std::string &travel_point) :$/;"	f	class:frontier_exploration::FrontierSearch
FrontierSearch	frontier_exploration/src/frontier_search.cpp	/^FrontierSearch::FrontierSearch(costmap_2d::Costmap2D &costmap, int min_frontier_size, std::string &travel_point, double potential_scale, double gain_scale) :$/;"	f	class:frontier_exploration::FrontierSearch
GEOMETRY_TOOLS_H_	frontier_exploration/include/frontier_exploration/geometry_tools.h	2;"	d
Gaze_activate_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Gaze_activate_pub;$/;"	m	class:Dynamic_Manager
Gaze_activate_pub	navi_manager/include/PathManager.h	/^	ros::Publisher Gaze_activate_pub;$/;"	m	class:PathManager
Gaze_activate_pub	navi_service/include/navi_service_node.h	/^	ros::Publisher Gaze_activate_pub;$/;"	m	class:villa_navi_srv
Gaze_activate_pub	navi_service/src/clicked_navi_test.cpp	/^  ros::Publisher Gaze_activate_pub;$/;"	m	class:click_navi_manager	file:
Gaze_point_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Gaze_point_pub;$/;"	m	class:Dynamic_Manager
Gaze_point_pub	navi_manager/include/PathManager.h	/^ 	ros::Publisher Gaze_point_pub;$/;"	m	class:PathManager
Gaze_point_pub	navi_service/include/navi_service_node.h	/^	ros::Publisher Gaze_point_pub;$/;"	m	class:villa_navi_srv
Gaze_point_pub	navi_service/src/clicked_navi_test.cpp	/^  ros::Publisher Gaze_point_pub;$/;"	m	class:click_navi_manager	file:
GetControlPoint	navi_manager/include/srBSpline.h	/^	double GetControlPoint( int Index ) { return m_ControlPoints[Index]; }$/;"	f	class:srBSpline
GetDegree	navi_manager/include/srBSpline.h	/^	int GetDegree( void ) { return m_Degree; }$/;"	f	class:srBSpline
GetGrevilleAbscissa	navi_manager/src/srBSpline.cpp	/^double srBSpline::GetGrevilleAbscissa( int controlPointIndex )$/;"	f	class:srBSpline
GetKnot	navi_manager/include/srBSpline.h	/^	double GetKnot( int Index ) { return m_Knots[Index]; }$/;"	f	class:srBSpline
GetNumControlPoint	navi_manager/include/srBSpline.h	/^	int GetNumControlPoint( void ) { return m_NumCPs; }$/;"	f	class:srBSpline
GetNumKnots	navi_manager/include/srBSpline.h	/^	int GetNumKnots( void ) { return m_NumKnots; }$/;"	f	class:srBSpline
Global2LocalCoord	navi_manager/src/Dynamic_Manager.cpp	/^vector<int> Dynamic_Manager::Global2LocalCoord(vector<int> Global_coord)$/;"	f	class:Dynamic_Manager
Global2LocalCoord	navi_manager/src/MDPmanager.cpp	/^vector<int> MDPManager::Global2LocalCoord(vector<int> Global_coord)$/;"	f	class:MDPManager
Global2LocalCoord	navi_manager/src/dynamic_window.cpp	/^vector<int> Dynamic_window::Global2LocalCoord(vector<int> Global_coord)$/;"	f	class:Dynamic_window
Global2MapCoord	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Global2MapCoord(const vector<double>& _globalcoord,vector<int>& _MapCoord)$/;"	f	class:Dynamic_Manager
Global2MapCoord	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Global2MapCoord(const vector<double>& _globalcoord,vector<int>& _MapCoord)$/;"	f	class:MDPManager
Global2MapCoord	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Global2MapCoord(const vector<double>& _globalcoord,vector<int>& _MapCoord)$/;"	f	class:Dynamic_window
GoalVector	navi_manager/include/Dynamic_Manager.h	/^	std::vector<double> GoalVector;$/;"	m	class:Dynamic_Manager
GoalVector	navi_manager/include/MDPmanager.h	/^	std::vector<double> GoalVector;$/;"	m	class:MDPManager
Goal_Coord	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> Goal_Coord;$/;"	m	class:Dynamic_Manager
Goal_Coord	navi_manager/include/MDPmanager.h	/^	std::vector<int> Goal_Coord;$/;"	m	class:MDPManager
Goal_X	navi_manager/include/Dynamic_Manager.h	45;"	d
Goal_X	navi_manager/include/MDPmanager.h	45;"	d
Goal_Y	navi_manager/include/Dynamic_Manager.h	46;"	d
Goal_Y	navi_manager/include/MDPmanager.h	46;"	d
Grid_Num_X	navi_manager/include/MapParam.h	16;"	d
Grid_Num_Y	navi_manager/include/MapParam.h	17;"	d
Grid_STEP	navi_manager/include/MapParam.h	15;"	d
Head_Pos	navi_manager/include/Dynamic_Manager.h	/^	std::vector<double> Head_Pos; 	$/;"	m	class:Dynamic_Manager
Head_Pos	navi_manager/include/dynamic_window.h	/^	std::vector<double> Head_Pos;$/;"	m	class:Dynamic_window
HeadingVector	navi_manager/include/Dynamic_Manager.h	/^	std::vector<double> HeadingVector;$/;"	m	class:Dynamic_Manager
HeadingVector	navi_manager/include/MDPmanager.h	/^	std::vector<double> HeadingVector;$/;"	m	class:MDPManager
Human_Belief_Scan_map	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid Human_Belief_Scan_map;$/;"	m	class:Dynamic_Manager
Human_Belief_Scan_map	navi_manager/include/dynamic_window.h	/^    nav_msgs::OccupancyGrid Human_Belief_Scan_map;$/;"	m	class:Dynamic_window
Human_CELL	navi_manager/include/Dynamic_Manager.h	40;"	d
Human_CELL	navi_manager/include/MDPmanager.h	38;"	d
Human_Goal_Coord	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> Human_Goal_Coord;$/;"	m	class:Dynamic_Manager
Human_Goal_Coord	navi_manager/include/MDPmanager.h	/^	std::vector<int> Human_Goal_Coord;$/;"	m	class:MDPManager
Human_MarkerArrayCallback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Human_MarkerArrayCallback(const visualization_msgs::MarkerArray::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
Human_MarkerArrayCallback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Human_MarkerArrayCallback(const visualization_msgs::MarkerArray::ConstPtr& msg)$/;"	f	class:Dynamic_window
Human_MarkerCallback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Human_MarkerCallback(const visualization_msgs::Marker::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
Human_MarkerCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Human_MarkerCallback(const visualization_msgs::Marker::ConstPtr& msg)$/;"	f	class:MDPManager
Human_MarkerCallback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Human_MarkerCallback(const visualization_msgs::Marker::ConstPtr& msg)$/;"	f	class:Dynamic_window
Human_Yolo_Callback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Human_Yolo_Callback(const visualization_msgs::MarkerArray::ConstPtr& msg)$/;"	f	class:MDPManager
Human_boxes_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Human_boxes_pub;$/;"	m	class:Dynamic_Manager
Human_pose	navi_manager/scripts/people_marker.py	/^   Human_pose = Pose()$/;"	v
Human_pose2	navi_manager/scripts/people_marker.py	/^   Human_pose2 = Pose()$/;"	v
Human_target_cmdCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Human_target_cmdCallback(const std_msgs::Int8::ConstPtr& msg)$/;"	f	class:MDPManager
IN	navi_manager/include/srBSpline.h	10;"	d
Idx2Globalpose	navi_service/src/map_checker.cpp	/^    void Idx2Globalpose(int idx, std::vector<double>& global_coord)$/;"	f	class:Map_Checker
Idx2Globalpose	navi_service/src/obstacle_checker.cpp	/^    void Idx2Globalpose(int idx, std::vector<double>& global_coord)$/;"	f	class:Obstacle_Checker
Init	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Init()$/;"	f	class:Dynamic_Manager
Init	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Init()$/;"	f	class:MDPManager
Init	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Init()$/;"	f	class:Dynamic_window
Int16	navi_manager/include/types.h	/^typedef	short int			Int16;		\/\/< 2 bytes integer -32768 ~ 32767$/;"	t
Int32	navi_manager/include/types.h	/^typedef int					Int32;		\/\/< 4 bytes integer -2147483648 ~ 2147483647$/;"	t
IsActive	navi_service/src/map_checker.cpp	/^  bool IsActive;$/;"	m	class:Map_Checker	file:
IsActive	navi_service/src/obstacle_checker.cpp	/^  bool IsActive;$/;"	m	class:Obstacle_Checker	file:
IsGoal	navi_service/src/map_checker.cpp	/^  bool IsGoal;$/;"	m	class:Map_Checker	file:
IsGoal	navi_service/src/obstacle_checker.cpp	/^  bool IsGoal;$/;"	m	class:Obstacle_Checker	file:
IsRotated	navi_service/src/map_checker.cpp	/^  bool IsRotated;$/;"	m	class:Map_Checker	file:
IsRotated	navi_service/src/obstacle_checker.cpp	/^  bool IsRotated;$/;"	m	class:Obstacle_Checker	file:
IsTargetMoved	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::IsTargetMoved(float target_x, float target_y, float criterion)$/;"	f	class:Dynamic_Manager
IsTargetMoved	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::IsTargetMoved(float target_x, float target_y, float criterion)$/;"	f	class:MDPManager
IsinDynamicMap	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::IsinDynamicMap(float global_x, float global_y)$/;"	f	class:Dynamic_Manager
IsinDynamicMap	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::IsinDynamicMap(float global_x, float global_y)$/;"	f	class:MDPManager
IsinDynamicMap	navi_manager/src/dynamic_window.cpp	/^bool Dynamic_window::IsinDynamicMap(float global_x, float global_y)$/;"	f	class:Dynamic_window
LASER_range_person	navi_manager/include/Dynamic_Manager.h	54;"	d
LASER_range_person	navi_manager/include/MDPmanager.h	55;"	d
LASER_range_person	navi_manager/include/dynamic_window.h	40;"	d
Leg_boxes_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Leg_boxes_pub;$/;"	m	class:Dynamic_Manager
Local_X_start	navi_manager/include/Dynamic_Manager.h	/^ 	int Local_X_start;$/;"	m	class:Dynamic_Manager
Local_X_start	navi_manager/include/MDPmanager.h	/^ 	int Local_X_start;$/;"	m	class:MDPManager
Local_X_start	navi_manager/include/dynamic_window.h	/^ 	int Local_X_start;$/;"	m	class:Dynamic_window
Local_Y_start	navi_manager/include/Dynamic_Manager.h	/^ 	int Local_Y_start;$/;"	m	class:Dynamic_Manager
Local_Y_start	navi_manager/include/MDPmanager.h	/^ 	int Local_Y_start;$/;"	m	class:MDPManager
Local_Y_start	navi_manager/include/dynamic_window.h	/^ 	int Local_Y_start;$/;"	m	class:Dynamic_window
Local_mapCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Local_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:MDPManager
Localmap_sub	navi_manager/include/MDPmanager.h	/^	ros::Subscriber  Localmap_sub;$/;"	m	class:MDPManager
MAP_RES	navi_service/src/map_checker.cpp	26;"	d	file:
MAP_RES	navi_service/src/obstacle_checker.cpp	26;"	d	file:
MARKERS_MAX	navi_manager/scripts/human_marker.py	/^MARKERS_MAX = 100$/;"	v
MARKERS_MAX	navi_manager/scripts/people_marker.py	/^MARKERS_MAX = 100$/;"	v
MATH_PI	navi_manager/include/Dynamic_Manager.h	62;"	d
MATH_PI	navi_manager/include/dynamic_window.h	44;"	d
MDPManager	navi_manager/include/MDPmanager.h	/^ 	MDPManager():maxiter(Maxiteration),Action_dim(8),gamma(1),Ra(ra),publishnum(0),m_boolPath(false),m_boolSolve(false){}$/;"	f	class:MDPManager
MDPManager	navi_manager/include/MDPmanager.h	/^class MDPManager$/;"	c
MDPManager	navi_manager/src/MDPmanager.cpp	/^MDPManager::MDPManager(MapParam* _pMapParam):maxiter(Maxiteration),Action_dim(8),gamma(1),Ra(ra),publishnum(0),ReceiveData(0),m_boolSolve(false),dyn_path_num(0)$/;"	f	class:MDPManager
MDPPath	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>  MDPPath;$/;"	m	class:Dynamic_Manager
MDPPath	navi_manager/include/MDPmanager.h	/^ 	vector<int>  MDPPath;$/;"	m	class:MDPManager
MDPPath	navi_manager/include/dynamic_window.h	/^ 	vector<int>      MDPPath;$/;"	m	class:Dynamic_window
MDPSol_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   MDPSol_pub;$/;"	m	class:Dynamic_Manager
MDPSol_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   MDPSol_pub;$/;"	m	class:MDPManager
MDPsolPublish	navi_manager/src/MDPmanager.cpp	/^void MDPManager::MDPsolPublish()$/;"	f	class:MDPManager
MDPsolve	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::MDPsolve()$/;"	f	class:Dynamic_Manager
MDPsolve	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::MDPsolve()$/;"	f	class:MDPManager
MTRAND_H	rrt_exploration/include/mtrand.h	46;"	d
MTRand	rrt_exploration/include/mtrand.h	/^  MTRand() : MTRand_int32() {}$/;"	f	class:MTRand
MTRand	rrt_exploration/include/mtrand.h	/^  MTRand(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand
MTRand	rrt_exploration/include/mtrand.h	/^  MTRand(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand
MTRand	rrt_exploration/include/mtrand.h	/^class MTRand : public MTRand_int32 {$/;"	c
MTRand53	rrt_exploration/include/mtrand.h	/^  MTRand53() : MTRand_int32() {}$/;"	f	class:MTRand53
MTRand53	rrt_exploration/include/mtrand.h	/^  MTRand53(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand53
MTRand53	rrt_exploration/include/mtrand.h	/^  MTRand53(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand53
MTRand53	rrt_exploration/include/mtrand.h	/^class MTRand53 : public MTRand_int32 {$/;"	c
MTRand_closed	rrt_exploration/include/mtrand.h	/^  MTRand_closed() : MTRand_int32() {}$/;"	f	class:MTRand_closed
MTRand_closed	rrt_exploration/include/mtrand.h	/^  MTRand_closed(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand_closed
MTRand_closed	rrt_exploration/include/mtrand.h	/^  MTRand_closed(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand_closed
MTRand_closed	rrt_exploration/include/mtrand.h	/^class MTRand_closed : public MTRand_int32 {$/;"	c
MTRand_int32	rrt_exploration/include/mtrand.h	/^  MTRand_int32() { if (!init) seed(5489UL); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	rrt_exploration/include/mtrand.h	/^  MTRand_int32(const unsigned long* array, int size) { seed(array, size); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	rrt_exploration/include/mtrand.h	/^  MTRand_int32(unsigned long s) { seed(s); init = true; }$/;"	f	class:MTRand_int32
MTRand_int32	rrt_exploration/include/mtrand.h	/^class MTRand_int32 { \/\/ Mersenne Twister random number generator$/;"	c
MTRand_open	rrt_exploration/include/mtrand.h	/^  MTRand_open() : MTRand_int32() {}$/;"	f	class:MTRand_open
MTRand_open	rrt_exploration/include/mtrand.h	/^  MTRand_open(const unsigned long* seed, int size) : MTRand_int32(seed, size) {}$/;"	f	class:MTRand_open
MTRand_open	rrt_exploration/include/mtrand.h	/^  MTRand_open(unsigned long seed) : MTRand_int32(seed) {}$/;"	f	class:MTRand_open
MTRand_open	rrt_exploration/include/mtrand.h	/^class MTRand_open : public MTRand_int32 {$/;"	c
MapCoord	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> MapCoord;$/;"	m	class:Dynamic_Manager
MapCoord	navi_manager/include/MDPmanager.h	/^	std::vector<int> MapCoord;$/;"	m	class:MDPManager
MapParam	navi_manager/include/MapParam.h	/^class MapParam$/;"	c
MapParam	navi_manager/src/MapParam.cpp	/^MapParam::MapParam()$/;"	f	class:MapParam
MapParam	navi_manager/src/MapParam.cpp	/^MapParam::MapParam(int width_,int height_,double res_)$/;"	f	class:MapParam
MapSize	navi_manager/include/MapParam.h	/^	int                 MapSize;$/;"	m	class:MapParam
Map_Checker	navi_service/src/map_checker.cpp	/^  Map_Checker(std::string name): $/;"	f	class:Map_Checker
Map_Checker	navi_service/src/map_checker.cpp	/^class Map_Checker$/;"	c	file:
Map_Recieved	navi_service/src/map_checker.cpp	/^  bool Map_Recieved;$/;"	m	class:Map_Checker	file:
Map_orig_Vector	navi_manager/include/Dynamic_Manager.h	/^ 	std::vector<double> Map_orig_Vector;$/;"	m	class:Dynamic_Manager
Map_orig_Vector	navi_manager/include/MDPmanager.h	/^ 	std::vector<double> Map_orig_Vector;$/;"	m	class:MDPManager
Map_orig_Vector	navi_manager/include/dynamic_window.h	/^ 	std::vector<double> Map_orig_Vector;$/;"	m	class:Dynamic_window
Mapcoord2DynamicCoord	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Mapcoord2DynamicCoord(const vector<int>& _Mapcoord, vector<double>& dynamicCoord)$/;"	f	class:Dynamic_Manager
Mapcoord2DynamicCoord	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Mapcoord2DynamicCoord(const vector<int>& _Mapcoord, vector<double>& dynamicCoord)$/;"	f	class:MDPManager
Mapcoord2DynamicCoord	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Mapcoord2DynamicCoord(const vector<int>& _Mapcoord, vector<double>& dynamicCoord)$/;"	f	class:Dynamic_window
Mapcoord2GlobalCoord	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Mapcoord2GlobalCoord(const vector<int>& _Mapcoord, vector<double>& GlobalCoord)$/;"	f	class:Dynamic_Manager
Mapcoord2GlobalCoord	navi_manager/src/MDPmanager.cpp	/^void MDPManager::Mapcoord2GlobalCoord(const vector<int>& _Mapcoord, vector<double>& GlobalCoord)$/;"	f	class:MDPManager
Mapcoord2GlobalCoord	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::Mapcoord2GlobalCoord(const vector<int>& _Mapcoord, vector<double>& GlobalCoord)$/;"	f	class:Dynamic_window
Maxiteration	navi_manager/include/Dynamic_Manager.h	53;"	d
Maxiteration	navi_manager/include/MDPmanager.h	54;"	d
MdpSols	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int> 	  MdpSols;		\/\/ Solution of MDP$/;"	m	class:Dynamic_Manager
MdpSols	navi_manager/include/MDPmanager.h	/^ 	vector<int> 	  MdpSols;		\/\/ Solution of MDP$/;"	m	class:MDPManager
N	navi_manager/include/srBSpline.h	/^	inline double N( int IndexCP, double u ) { return OneBasisFun( IndexCP, u ); }$/;"	f	class:srBSpline
Nearest	rrt_exploration/scripts/functions.py	/^def Nearest(V,x):$/;"	f
Nearest	rrt_exploration/src/functions.cpp	/^std::vector<float> Nearest(  std::vector< std::vector<float>  > V, std::vector<float>  x){$/;"	f
Nearest2	rrt_exploration/scripts/functions.py	/^def Nearest2(V,x):$/;"	f
NearestCellTest	frontier_exploration/src/test/costmap_tools_tests.cpp	/^class NearestCellTest : public ::testing::Test{$/;"	c	file:
NearestHuman_V	navi_manager/include/MapParam.h	/^	std::vector<float>  NearestHuman_V;$/;"	m	class:MapParam
NeighborhoodFunctionTest	frontier_exploration/src/test/costmap_tools_tests.cpp	/^class NeighborhoodFunctionTest : public ::testing::Test{$/;"	c	file:
Norm	rrt_exploration/src/functions.cpp	/^float Norm(std::vector<float> x1,std::vector<float> x2)$/;"	f
NotUpdatedCameraregion	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::NotUpdatedCameraregion(int idx)$/;"	f	class:Dynamic_Manager
NotUpdatedCameraregion	navi_manager/src/dynamic_window.cpp	/^bool Dynamic_window::NotUpdatedCameraregion(int idx)$/;"	f	class:Dynamic_window
Num_Grids	navi_manager/include/Dynamic_Manager.h	/^ 	int               Num_Grids;$/;"	m	class:Dynamic_Manager
Num_Grids	navi_manager/include/MDPmanager.h	/^ 	int               Num_Grids;$/;"	m	class:MDPManager
Num_Grids	navi_manager/include/dynamic_window.h	/^ 	int               Num_Grids;$/;"	m	class:Dynamic_window
Num_action	navi_manager/include/Dynamic_Manager.h	51;"	d
Num_action	navi_manager/include/MDPmanager.h	52;"	d
Num_grid_X	navi_manager/include/MapParam.h	/^	int   		  		Num_grid_X;$/;"	m	class:MapParam
Num_grid_Y	navi_manager/include/MapParam.h	/^	int   		  		Num_grid_Y;$/;"	m	class:MapParam
OCC_Info	navi_manager/include/MapParam.h	/^	std::vector<int>    OCC_Info;$/;"	m	class:MapParam
OUT	navi_manager/include/srBSpline.h	11;"	d
ObstacleFree	rrt_exploration/src/functions.cpp	/^char ObstacleFree(std::vector<float> xnear, std::vector<float> &xnew, nav_msgs::OccupancyGrid mapsub){$/;"	f
Obstacle_Checker	navi_service/src/obstacle_checker.cpp	/^  Obstacle_Checker(std::string name): $/;"	f	class:Obstacle_Checker
Obstacle_Checker	navi_service/src/obstacle_checker.cpp	/^class Obstacle_Checker$/;"	c	file:
OnceTarget	navi_manager/include/Dynamic_Manager.h	/^ 	bool 	OnceTarget;$/;"	m	class:Dynamic_Manager
OneBasisFun	navi_manager/src/srBSpline.cpp	/^double srBSpline::OneBasisFun( int i, double u )$/;"	f	class:srBSpline
OneBasisFunDers	navi_manager/src/srBSpline.cpp	/^double srBSpline::OneBasisFunDers( int i, double u, int n )$/;"	f	class:srBSpline
OneBasisFunDers	navi_manager/src/srBSpline.cpp	/^void srBSpline::OneBasisFunDers( OUT double* ders, int i, double u, int n )$/;"	f	class:srBSpline
P	navi_manager/include/srBSpline.h	/^	inline double P( int IndexCP ) { return GetControlPoint( IndexCP ); }$/;"	f	class:srBSpline
POS_ERR	navi_manager/include/PathManager.h	46;"	d
PathManager	navi_manager/include/PathManager.h	/^class PathManager$/;"	c
PathManager	navi_manager/src/PathManager.cpp	/^PathManager::PathManager()$/;"	f	class:PathManager
Path_Pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Path_Pub;$/;"	m	class:Dynamic_Manager
Path_Pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   Path_Pub;$/;"	m	class:MDPManager
Path_Pub	navi_manager/include/dynamic_window.h	/^	ros::Publisher   Path_Pub;$/;"	m	class:Dynamic_window
PointInPolygonTest	frontier_exploration/src/test/geometry_tools_tests.cpp	/^class PointInPolygonTest : public::testing::Test{$/;"	c	file:
PointSet	navi_service/src/map_checker.cpp	/^  std::vector<geometry_msgs::PointStamped> PointSet;$/;"	m	class:Map_Checker	file:
PointSet	navi_service/src/obstacle_checker.cpp	/^  std::vector<geometry_msgs::PointStamped> PointSet;$/;"	m	class:Obstacle_Checker	file:
Points	navi_manager/include/Dynamic_Manager.h	/^	vector< std::vector<int> > Points;$/;"	m	class:Dynamic_Manager
Points	navi_manager/include/MDPmanager.h	/^	vector< std::vector<int> > Points;$/;"	m	class:MDPManager
Policies	navi_manager/include/Dynamic_Manager.h	/^ 	vector<char>  	  Policies;		\/\/ Policy (Pi)$/;"	m	class:Dynamic_Manager
Policies	navi_manager/include/MDPmanager.h	/^ 	vector<char>  	  Policies;		\/\/ Policy (Pi)$/;"	m	class:MDPManager
PolicyNum	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>  	  PolicyNum;	\/\/ Policy (PiNum)$/;"	m	class:Dynamic_Manager
PolicyNum	navi_manager/include/MDPmanager.h	/^ 	vector<int>  	  PolicyNum;	\/\/ Policy (PiNum)$/;"	m	class:MDPManager
Pre_dynamicSplinePath	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::Path Pre_dynamicSplinePath;$/;"	m	class:Dynamic_Manager
Pre_dynamicSplinePath	navi_manager/include/MDPmanager.h	/^	nav_msgs::Path 		Pre_dynamicSplinePath;$/;"	m	class:MDPManager
Prob_bad	navi_manager/include/Dynamic_Manager.h	/^	double Prob_bad;$/;"	m	class:Dynamic_Manager
Prob_bad	navi_manager/include/MDPmanager.h	/^	double Prob_bad;$/;"	m	class:MDPManager
Prob_good	navi_manager/include/Dynamic_Manager.h	/^	double Prob_good;$/;"	m	class:Dynamic_Manager
Prob_good	navi_manager/include/MDPmanager.h	/^	double Prob_good;$/;"	m	class:MDPManager
Publish_beliefmap	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Publish_beliefmap()$/;"	f	class:Dynamic_Manager
Publish_dynamicPath	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Publish_dynamicPath()$/;"	f	class:Dynamic_Manager
Publish_filter_measurment	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::Publish_filter_measurment(int measurement_type)$/;"	f	class:Dynamic_Manager
Publish_nav_target	frontier_exploration/src/explore_server.cpp	/^    void Publish_nav_target(geometry_msgs::PoseStamped _targetpose)$/;"	f	class:frontier_exploration::FrontierExplorationServer	file:
Publish_nav_target	navi_service/src/clicked_navi_test.cpp	/^  void Publish_nav_target(float _x, float _y, float _theta)$/;"	f	class:click_navi_manager
Publish_nav_target	navi_service/src/navi_service_node.cpp	/^void villa_navi_srv::Publish_nav_target(float _x, float _y, float _theta)$/;"	f	class:villa_navi_srv
RAD2DEG	navi_manager/include/types.h	/^inline real_s RAD2DEG(double r){ return (r * SR_DEGREE); }$/;"	f
RAD2DEG	navi_manager/include/types.h	/^inline real_s RAD2DEG(float r) { return (r * SR_DEGREE); }$/;"	f
RAD2DEG	navi_manager/include/types.h	/^inline real_s RAD2DEG(int r)	 { return (r * SR_DEGREE); }$/;"	f
Ra	navi_manager/include/Dynamic_Manager.h	/^ 	double Ra;$/;"	m	class:Dynamic_Manager
Ra	navi_manager/include/MDPmanager.h	/^ 	double Ra;$/;"	m	class:MDPManager
ReceiveData	navi_manager/include/Dynamic_Manager.h	/^ 	int ReceiveData;$/;"	m	class:Dynamic_Manager
ReceiveData	navi_manager/include/MDPmanager.h	/^ 	int ReceiveData;$/;"	m	class:MDPManager
Receive_count	navi_manager/src/dynamic_planner.cpp	/^static int  Receive_count=0;$/;"	v	file:
Recived_path	navi_manager/include/PathManager.h	/^	std::vector< std::vector<double> > Recived_path;$/;"	m	class:PathManager
Rewards	navi_manager/include/Dynamic_Manager.h	/^ 	vector<double>    Rewards; 		\/\/ R$/;"	m	class:Dynamic_Manager
Rewards	navi_manager/include/MDPmanager.h	/^ 	vector<double>    Rewards; 		\/\/ R$/;"	m	class:MDPManager
RobotHeading_V	navi_manager/include/MapParam.h	/^	std::vector<float>  RobotHeading_V;$/;"	m	class:MapParam
RobotHeading_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   RobotHeading_pub;$/;"	m	class:Dynamic_Manager
RobotHeading_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   RobotHeading_pub;$/;"	m	class:MDPManager
Robot_localpos	navi_manager/include/MapParam.h	/^	std::vector<int>    Robot_localpos;$/;"	m	class:MapParam
Robotheading_Callback	navi_manager/src/base_conti_actionlib.cpp	/^void Robotheading_Callback(const geometry_msgs::Pose::ConstPtr& msg)$/;"	f
SRLIB_DOUBLE	navi_manager/include/types.h	4;"	d
SRLIB_TYPE	navi_manager/include/types.h	2;"	d
SR_DEGREE	navi_manager/include/types.h	22;"	d
SR_DEGREE	navi_manager/include/types.h	45;"	d
SR_EPS	navi_manager/include/types.h	31;"	d
SR_EPS	navi_manager/include/types.h	8;"	d
SR_FOURTHIRD	navi_manager/include/types.h	20;"	d
SR_FOURTHIRD	navi_manager/include/types.h	43;"	d
SR_HALF	navi_manager/include/types.h	10;"	d
SR_HALF	navi_manager/include/types.h	33;"	d
SR_ISEQUAL	navi_manager/include/types.h	25;"	d
SR_ISEQUAL	navi_manager/include/types.h	48;"	d
SR_ISZERO	navi_manager/include/types.h	24;"	d
SR_ISZERO	navi_manager/include/types.h	47;"	d
SR_ONE	navi_manager/include/types.h	11;"	d
SR_ONE	navi_manager/include/types.h	34;"	d
SR_ONESIXTH	navi_manager/include/types.h	19;"	d
SR_ONESIXTH	navi_manager/include/types.h	42;"	d
SR_ONETHIRD	navi_manager/include/types.h	18;"	d
SR_ONETHIRD	navi_manager/include/types.h	41;"	d
SR_PI	navi_manager/include/types.h	14;"	d
SR_PI	navi_manager/include/types.h	37;"	d
SR_PI_HALF	navi_manager/include/types.h	13;"	d
SR_PI_HALF	navi_manager/include/types.h	36;"	d
SR_PI_SQR	navi_manager/include/types.h	17;"	d
SR_PI_SQR	navi_manager/include/types.h	40;"	d
SR_PI_SQRT2	navi_manager/include/types.h	16;"	d
SR_PI_SQRT2	navi_manager/include/types.h	39;"	d
SR_RADIAN	navi_manager/include/types.h	21;"	d
SR_RADIAN	navi_manager/include/types.h	44;"	d
SR_RAND	navi_manager/include/types.h	27;"	d
SR_RAND	navi_manager/include/types.h	50;"	d
SR_ROUND	navi_manager/include/types.h	26;"	d
SR_ROUND	navi_manager/include/types.h	49;"	d
SR_SAFE_DELETE	navi_manager/include/utils.h	4;"	d
SR_SAFE_DELETE_AR	navi_manager/include/utils.h	6;"	d
SR_SAFE_DESTROY_WINDOW	navi_manager/include/utils.h	5;"	d
SR_SAFE_RELEASE	navi_manager/include/utils.h	7;"	d
SR_SENSOR_MSG_NA	navi_manager/include/types.h	67;"	d
SR_TWO	navi_manager/include/types.h	12;"	d
SR_TWO	navi_manager/include/types.h	35;"	d
SR_TWO_PI	navi_manager/include/types.h	15;"	d
SR_TWO_PI	navi_manager/include/types.h	38;"	d
SR_ZERO	navi_manager/include/types.h	32;"	d
SR_ZERO	navi_manager/include/types.h	9;"	d
Scaled_dynamic_map	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map;$/;"	m	class:Dynamic_Manager
Scaled_dynamic_map	navi_manager/include/MDPmanager.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map;$/;"	m	class:MDPManager
Scaled_dynamic_map	navi_manager/include/dynamic_window.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map;$/;"	m	class:Dynamic_window
Scaled_dynamic_map	navi_service/src/obstacle_checker.cpp	/^  nav_msgs::OccupancyGrid Scaled_dynamic_map;$/;"	m	class:Obstacle_Checker	file:
Scaled_dynamic_map_path	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map_path;$/;"	m	class:Dynamic_Manager
Scaled_dynamic_map_path	navi_manager/include/MDPmanager.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map_path;$/;"	m	class:MDPManager
Scaled_dynamic_map_path	navi_manager/include/dynamic_window.h	/^	nav_msgs::OccupancyGrid Scaled_dynamic_map_path;$/;"	m	class:Dynamic_window
Scaled_dynamic_map_path_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Scaled_dynamic_map_path_pub;$/;"	m	class:Dynamic_Manager
Scaled_dynamic_map_path_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   Scaled_dynamic_map_path_pub;$/;"	m	class:MDPManager
Scaled_dynamic_map_path_pub	navi_manager/include/dynamic_window.h	/^	ros::Publisher   Scaled_dynamic_map_path_pub;$/;"	m	class:Dynamic_window
Scaled_dynamic_map_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Scaled_dynamic_map_pub;$/;"	m	class:Dynamic_Manager
Scaled_dynamic_map_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   Scaled_dynamic_map_pub;$/;"	m	class:MDPManager
Scaled_dynamic_map_pub	navi_manager/include/dynamic_window.h	/^	ros::Publisher   Scaled_dynamic_map_pub;$/;"	m	class:Dynamic_window
Scaled_dynamic_map_pub	navi_service/src/obstacle_checker.cpp	/^  ros::Publisher Scaled_dynamic_map_pub;$/;"	m	class:Obstacle_Checker	file:
Scaled_static_map	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid Scaled_static_map;$/;"	m	class:Dynamic_Manager
Scaled_static_map	navi_manager/include/MDPmanager.h	/^	nav_msgs::OccupancyGrid Scaled_static_map;$/;"	m	class:MDPManager
Scaled_static_map	navi_manager/include/dynamic_window.h	/^	nav_msgs::OccupancyGrid Scaled_static_map;$/;"	m	class:Dynamic_window
Scaled_static_map_path	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid Scaled_static_map_path;$/;"	m	class:Dynamic_Manager
Scaled_static_map_path	navi_manager/include/MDPmanager.h	/^	nav_msgs::OccupancyGrid Scaled_static_map_path;$/;"	m	class:MDPManager
Scaled_static_map_path	navi_manager/include/dynamic_window.h	/^	nav_msgs::OccupancyGrid Scaled_static_map_path;$/;"	m	class:Dynamic_window
Scaled_static_map_path_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   Scaled_static_map_path_pub;$/;"	m	class:MDPManager
Scaled_static_map_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   Scaled_static_map_pub;$/;"	m	class:Dynamic_Manager
Scaled_static_map_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   Scaled_static_map_pub;$/;"	m	class:MDPManager
Scaled_static_map_pub	navi_manager/include/dynamic_window.h	/^	ros::Publisher   Scaled_static_map_pub;$/;"	m	class:Dynamic_window
Set	navi_manager/src/srBSpline.cpp	/^void srBSpline::Set( int Degree, int NumCPs, double Ti, double Tf , bool KnotRepeat \/*= true*\/ )$/;"	f	class:srBSpline
Set	navi_manager/src/srBSpline.cpp	/^void srBSpline::Set( int Degree, int NumCPs, double* CPs, double Ti, double Tf , bool KnotRepeat \/*= true*\/ )$/;"	f	class:srBSpline
Set	navi_manager/src/srBSpline.cpp	/^void srBSpline::Set( int Degree, int NumCPs, double* CPs, int NumKnots, double* Knots )$/;"	f	class:srBSpline
SetControlPoint	navi_manager/include/srBSpline.h	/^	void SetControlPoint( int Index, double NewValue ) { m_ControlPoints[Index] = NewValue; }$/;"	f	class:srBSpline
SetCtrlPts	navi_manager/src/srBSpline.cpp	/^bool srBSpline::SetCtrlPts( double aXi, double aXf, const double* pCtrlPts, int aRepeatedCtrlPts_Initial, int aRepeatedCtrlPts_Final, int NumCtrlPt )$/;"	f	class:srBSpline
SetDifferentialBSpline	navi_manager/src/srBSpline.cpp	/^void srBSpline::SetDifferentialBSpline( srBSpline& aBSplineSource )$/;"	f	class:srBSpline
SetKnot	navi_manager/include/srBSpline.h	/^	void SetKnot( int Index, double NewValue ) { m_Knots[Index] = NewValue; }$/;"	f	class:srBSpline
SetUp	frontier_exploration/src/test/costmap_tools_tests.cpp	/^    virtual void SetUp(){$/;"	f	class:NearestCellTest
SetUp	frontier_exploration/src/test/costmap_tools_tests.cpp	/^    virtual void SetUp(){$/;"	f	class:NeighborhoodFunctionTest
SetUp	frontier_exploration/src/test/geometry_tools_tests.cpp	/^    virtual void SetUp(){$/;"	f	class:PointInPolygonTest
SolveTridiagonal	navi_manager/src/srBSpline.cpp	/^void srBSpline::SolveTridiagonal( int _n, std::vector<double>& _Q,double* _P )$/;"	f	class:srBSpline
SolveTridiagonal	navi_manager/src/srBSpline.cpp	/^void srBSpline::SolveTridiagonal( int _n,double* _Q,double* _P )$/;"	f	class:srBSpline
SpeechGui	navi_manager/scripts/gui_move.py	/^class SpeechGui(QtGui.QWidget):$/;"	c
SplinePath_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher 	 SplinePath_pub;$/;"	m	class:Dynamic_Manager
SplinePath_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher 	 SplinePath_pub;$/;"	m	class:MDPManager
SplinePath_pub2	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher 	 SplinePath_pub2;$/;"	m	class:Dynamic_Manager
SplinePath_pub2	navi_manager/include/MDPmanager.h	/^	ros::Publisher 	 SplinePath_pub2;$/;"	m	class:MDPManager
St_OBS_CELL	navi_manager/include/Dynamic_Manager.h	38;"	d
St_OBS_CELL	navi_manager/include/MDPmanager.h	36;"	d
Start_X	navi_manager/include/Dynamic_Manager.h	42;"	d
Start_X	navi_manager/include/MDPmanager.h	42;"	d
Start_Y	navi_manager/include/Dynamic_Manager.h	43;"	d
Start_Y	navi_manager/include/MDPmanager.h	43;"	d
State_Distance	navi_manager/include/MapParam.h	/^	std::vector<float>  State_Distance;$/;"	m	class:MapParam
State_Type	navi_manager/include/MapParam.h	/^	std::vector<int>    State_Type;$/;"	m	class:MapParam
State_dim	navi_manager/include/Dynamic_Manager.h	/^ 	int               State_dim;$/;"	m	class:Dynamic_Manager
State_dim	navi_manager/include/MDPmanager.h	/^ 	int               State_dim;$/;"	m	class:MDPManager
Steer	rrt_exploration/src/functions.cpp	/^std::vector<float> Steer(  std::vector<float> x_nearest , std::vector<float> x_rand, float eta){$/;"	f
SurfMeshParams	navi_manager/src/srBSpline.cpp	/^void srBSpline::SurfMeshParams( OUT double* uk, double* vl, std::vector<std::vector<double>> Datapoints , int datasize_u, int datasize_v)$/;"	f	class:srBSpline
SurfaceDerivsA1g1	navi_manager/src/srBSpline.cpp	/^void srBSpline::SurfaceDerivsA1g1( OUT double** SKL, double u,double v, int d )$/;"	f	class:srBSpline
TEST	frontier_exploration/src/test/geometry_tools_tests.cpp	/^TEST(PointsAdjacentTest, different)$/;"	f
TEST	frontier_exploration/src/test/geometry_tools_tests.cpp	/^TEST(PointsAdjacentTest, identical)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NearestCellTest, differentCell)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NearestCellTest, offMap)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NearestCellTest, sameCell)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NeighborhoodFunctionTest, corner)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NeighborhoodFunctionTest, edge)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NeighborhoodFunctionTest, middle)$/;"	f
TEST_F	frontier_exploration/src/test/costmap_tools_tests.cpp	/^TEST_F(NeighborhoodFunctionTest, offMap)$/;"	f
TEST_F	frontier_exploration/src/test/geometry_tools_tests.cpp	/^TEST_F(PointInPolygonTest, inside){$/;"	f
TEST_F	frontier_exploration/src/test/geometry_tools_tests.cpp	/^TEST_F(PointInPolygonTest, outside){$/;"	f
U	navi_manager/include/Dynamic_Manager.h	/^ 	vector<double>	  U;			\/\/ Long term Utility$/;"	m	class:Dynamic_Manager
U	navi_manager/include/MDPmanager.h	/^ 	vector<double>	  U;			\/\/ Long term Utility$/;"	m	class:MDPManager
U	navi_manager/include/srBSpline.h	/^	inline double U( int IndexKnot ) { return GetKnot( IndexKnot ); }$/;"	f	class:srBSpline
UInt16	navi_manager/include/types.h	/^typedef unsigned short int	UInt16;		\/\/< 2 bytes integer 0 ~ 65535$/;"	t
UInt32	navi_manager/include/types.h	/^typedef unsigned int		UInt32;		\/\/< 4 bytes integer 0 ~ 4294967255$/;"	t
UnitGoalVec_pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   UnitGoalVec_pub;$/;"	m	class:MDPManager
Up	navi_manager/include/Dynamic_Manager.h	/^ 	vector<double>	  Up;			\/\/ Uprime, used in updates$/;"	m	class:Dynamic_Manager
Up	navi_manager/include/MDPmanager.h	/^ 	vector<double>	  Up;			\/\/ Uprime, used in updates$/;"	m	class:MDPManager
X_MAPSIZE	navi_service/src/map_checker.cpp	25;"	d	file:
X_MAPSIZE	navi_service/src/obstacle_checker.cpp	25;"	d	file:
X_mapSize	navi_manager/include/Dynamic_Manager.h	/^ 	int               X_mapSize;$/;"	m	class:Dynamic_Manager
X_mapSize	navi_manager/include/MDPmanager.h	/^ 	int               X_mapSize;$/;"	m	class:MDPManager
X_mapSize	navi_manager/include/dynamic_window.h	/^ 	int               X_mapSize;$/;"	m	class:Dynamic_window
Xstartx	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
Xstartx	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
Xstarty	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
Xstarty	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
YOLO_range_person	navi_manager/include/Dynamic_Manager.h	57;"	d
YOLO_range_person	navi_manager/include/MDPmanager.h	56;"	d
YOLO_range_person	navi_manager/include/dynamic_window.h	41;"	d
Y_mapSize	navi_manager/include/Dynamic_Manager.h	/^ 	int               Y_mapSize;$/;"	m	class:Dynamic_Manager
Y_mapSize	navi_manager/include/MDPmanager.h	/^ 	int               Y_mapSize;$/;"	m	class:MDPManager
Y_mapSize	navi_manager/include/dynamic_window.h	/^ 	int               Y_mapSize;$/;"	m	class:Dynamic_window
Yolo_iter	navi_manager/include/Dynamic_Manager.h	/^ 	int Yolo_iter;$/;"	m	class:Dynamic_Manager
_AveragingAlg	navi_manager/src/srBSpline.cpp	/^void srBSpline::_AveragingAlg( double* u, double* \/*_U*\/, int _p, int _m )$/;"	f	class:srBSpline
_CalcKnot	navi_manager/src/srBSpline.cpp	/^inline void srBSpline::_CalcKnot( OUT double* Knot, int NumKnots, double Ti, double Tf, int NumRepeat1, int NumRepeat2 )$/;"	f	class:srBSpline
_CalcKnot2	navi_manager/src/srBSpline.cpp	/^void srBSpline::_CalcKnot2( OUT double* Knot, int NumKnots, double* t, int NumRepeat1 \/*= 4*\/, int NumRepeat2 \/*= 4*\/ )$/;"	f	class:srBSpline
_CalcKnot2	navi_manager/src/srBSpline.cpp	/^void srBSpline::_CalcKnot2( OUT double* Knot, int NumKnots, std::vector<double>& t, int NumRepeat1 \/*= 4*\/, int NumRepeat2 \/*= 4*\/ )$/;"	f	class:srBSpline
_CalcKnot3	navi_manager/src/srBSpline.cpp	/^void srBSpline::_CalcKnot3( OUT double* Knot, int NumKnots, std::vector<double>& t, int NumRepeat1 \/*= 4*\/, int NumRepeat2 \/*= 4*\/ )$/;"	f	class:srBSpline
_CalcukChordlength	navi_manager/src/srBSpline.cpp	/^void srBSpline::_CalcukChordlength(double* t, double* Q, double* U, int NumData )$/;"	f	class:srBSpline
_Clear	navi_manager/src/srBSpline.cpp	/^void srBSpline::_Clear( void )$/;"	f	class:srBSpline
_Left	navi_manager/src/srBSpline.cpp	/^inline double srBSpline::_Left( int i, int j, double u )$/;"	f	class:srBSpline
_Linspace	navi_manager/src/srBSpline.cpp	/^inline void srBSpline::_Linspace( OUT double* Array, double Ti, double Tf, int NumData )$/;"	f	class:srBSpline
_Right	navi_manager/src/srBSpline.cpp	/^inline double srBSpline::_Right( int i, int j, double u )$/;"	f	class:srBSpline
_UTILS_H_	navi_manager/include/utils.h	2;"	d
___SRLIB_BSPLINE___	navi_manager/include/srBSpline.h	5;"	d
__init__	navi_manager/scripts/base_move.py	/^    def __init__(self, wait=0.0):$/;"	m	class:BaseMoveCBA
__init__	navi_manager/scripts/gui_move.py	/^  def __init__(self):$/;"	m	class:SpeechGui
__init__	rrt_exploration/scripts/functions.py	/^	def __init__(self,name):$/;"	m	class:robot
anyPointsNearby	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  bool anyPointsNearby(const T &one, const std::list<S> &list, const double &proximity){$/;"	f	namespace:frontier_exploration
array_publisher	navi_manager/scripts/human_marker.py	/^array_publisher = rospy.Publisher(topic_array, MarkerArray,queue_size=10)$/;"	v
array_publisher	navi_manager/scripts/people_marker.py	/^array_publisher = rospy.Publisher(topic_array, PoseArray,queue_size=10)$/;"	v
as_	frontier_exploration/src/explore_server.cpp	/^    actionlib::SimpleActionServer<frontier_exploration::ExploreTaskAction> as_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
base_pose_callback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::base_pose_callback(const nav_msgs::Odometry::ConstPtr& msg)$/;"	f	class:MDPManager
base_trajectory	navi_manager/include/PathManager.h	/^ 	std::vector< std::vector<double> > base_trajectory;$/;"	m	class:PathManager
belief_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   belief_pub;$/;"	m	class:Dynamic_Manager
blacklistPointService	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::blacklistPointService(frontier_exploration::BlacklistPoint::Request &req, frontier_exploration::BlacklistPoint::Response &res) {$/;"	f	class:frontier_exploration::BoundedExploreLayer
blacklistPointService_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::ServiceServer blacklistPointService_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
blacklist_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    std::list<geometry_msgs::Point> blacklist_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
blacklist_marker_pub_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::Publisher blacklist_marker_pub_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
blacklist_radius_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    double blacklist_radius_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
boolDynamic	navi_manager/include/MapParam.h	/^	bool                boolDynamic;$/;"	m	class:MapParam
boolreceive	navi_manager/include/PathManager.h	/^	bool boolreceive;$/;"	m	class:PathManager
booltrackHuman	navi_manager/include/Dynamic_Manager.h	/^	bool       booltrackHuman;$/;"	m	class:Dynamic_Manager
booltrackHuman	navi_manager/include/MDPmanager.h	/^	bool       			booltrackHuman;$/;"	m	class:MDPManager
buildNewFrontier	frontier_exploration/src/frontier_search.cpp	/^Frontier FrontierSearch::buildNewFrontier(unsigned int initial_cell, unsigned int reference, std::vector<bool>& frontier_flag){$/;"	f	class:frontier_exploration::FrontierSearch
callBack	rrt_exploration/scripts/assigner.py	/^def callBack(data):$/;"	f
callBack	rrt_exploration/scripts/filter.py	/^def callBack(data,args):$/;"	f
camera_map	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::OccupancyGrid camera_map;$/;"	m	class:Dynamic_Manager
camera_map	navi_manager/include/dynamic_window.h	/^	nav_msgs::OccupancyGrid camera_map;$/;"	m	class:Dynamic_window
camera_map_pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   camera_map_pub;$/;"	m	class:Dynamic_Manager
camera_map_pub	navi_manager/include/dynamic_window.h	/^	ros::Publisher   camera_map_pub;$/;"	m	class:Dynamic_window
cancelGoal	rrt_exploration/scripts/functions.py	/^	def cancelGoal(self):$/;"	m	class:robot
cell_xy	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>		  cell_xy;$/;"	m	class:Dynamic_Manager
cell_xy	navi_manager/include/MDPmanager.h	/^ 	vector<int>		  cell_xy;$/;"	m	class:MDPManager
cell_xy	navi_manager/include/dynamic_window.h	/^	vector<int>		  cell_xy;$/;"	m	class:Dynamic_window
checkDistance	navi_service/src/map_checker.cpp	/^    bool checkDistance(std::vector<double>& pos1, std::vector<double>& pos2, double err_criterion)$/;"	f	class:Map_Checker
checkDistance	navi_service/src/obstacle_checker.cpp	/^    bool checkDistance(std::vector<double>& pos1, std::vector<double>& pos2, double err_criterion)$/;"	f	class:Obstacle_Checker
checkNoBoundary	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::checkNoBoundary(vector<int> cur_pos)$/;"	f	class:Dynamic_Manager
checkNoBoundary	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::checkNoBoundary(vector<int> cur_pos)$/;"	f	class:MDPManager
checkObs	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::checkObs(int cur_stid,int actionNum)$/;"	f	class:Dynamic_Manager
checkObs	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::checkObs(int cur_stid,int actionNum)$/;"	f	class:MDPManager
checkStaticObs	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::checkStaticObs(vector<int> cur_pos)$/;"	f	class:Dynamic_Manager
checkStaticObs	navi_manager/src/MDPmanager.cpp	/^bool MDPManager::checkStaticObs(vector<int> cur_pos)$/;"	f	class:MDPManager
check_cameraregion	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::check_cameraregion(float x_pos,float y_pos)$/;"	f	class:Dynamic_Manager
check_cameraregion	navi_manager/src/dynamic_window.cpp	/^bool Dynamic_window::check_cameraregion(float x_pos,float y_pos)$/;"	f	class:Dynamic_window
check_obstacle	navi_service/src/map_checker.cpp	/^    bool check_obstacle(double _x, double _y)$/;"	f	class:Map_Checker
checklistbool	navi_service/src/map_checker.cpp	/^  std::vector<bool> checklistbool;$/;"	m	class:Map_Checker	file:
checklistbool	navi_service/src/obstacle_checker.cpp	/^  std::vector<bool> checklistbool;$/;"	m	class:Obstacle_Checker	file:
checklistmap	navi_service/src/map_checker.cpp	/^  std::map<int,bool> checklistmap;$/;"	m	class:Map_Checker	file:
checklistmap	navi_service/src/obstacle_checker.cpp	/^  std::map<int,bool> checklistmap;$/;"	m	class:Obstacle_Checker	file:
clearBlacklistService	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::clearBlacklistService(std_srvs::Empty::Request &req, std_srvs::Empty::Response &resp) {$/;"	f	class:frontier_exploration::BoundedExploreLayer
clearBlacklistService_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::ServiceServer clearBlacklistService_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
click_navi_manager	navi_service/src/clicked_navi_test.cpp	/^  explicit click_navi_manager(){}$/;"	f	class:click_navi_manager
click_navi_manager	navi_service/src/clicked_navi_test.cpp	/^class click_navi_manager{$/;"	c	file:
clickedpoint	rrt_exploration/src/global_rrt_detector.cpp	/^geometry_msgs::PointStamped clickedpoint;$/;"	v
clickedpoint	rrt_exploration/src/local_rrt_detector.cpp	/^geometry_msgs::PointStamped clickedpoint;$/;"	v
cmd_velocity_pub	navi_service/src/map_checker.cpp	/^  ros::Publisher cmd_velocity_pub;$/;"	m	class:Map_Checker	file:
cmd_velocity_pub	navi_service/src/obstacle_checker.cpp	/^  ros::Publisher cmd_velocity_pub;$/;"	m	class:Obstacle_Checker	file:
configured_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    bool configured_, marked_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
connectCubicSpline	navi_manager/src/srBSpline.cpp	/^void srBSpline::connectCubicSpline( srBSpline* prev_spline,srBSpline* post_spline )$/;"	f	class:srBSpline
costmap_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    costmap_2d::Costmap2D& costmap_;$/;"	m	class:frontier_exploration::FrontierSearch
costmap_	frontier_exploration/src/test/costmap_tools_tests.cpp	/^    costmap_2d::Costmap2D costmap_;$/;"	m	class:NearestCellTest	file:
costmap_	frontier_exploration/src/test/costmap_tools_tests.cpp	/^    costmap_2d::Costmap2D costmap_;$/;"	m	class:NeighborhoodFunctionTest	file:
count	navi_manager/scripts/human_marker.py	/^count = 0$/;"	v
count	navi_manager/scripts/people_marker.py	/^count = 0$/;"	v
cur_coord	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> cur_coord;$/;"	m	class:Dynamic_Manager
cur_coord	navi_manager/include/MDPmanager.h	/^	std::vector<int> cur_coord;$/;"	m	class:MDPManager
cur_idx	navi_manager/include/PathManager.h	/^	int cur_idx;$/;"	m	class:PathManager
cur_people	navi_manager/include/Dynamic_Manager.h	/^    std::vector< std::vector< double > > cur_people;$/;"	m	class:Dynamic_Manager
cur_people	navi_manager/include/dynamic_window.h	/^    std::vector< std::vector< double > > cur_people;$/;"	m	class:Dynamic_window
cur_yolo_people	navi_manager/include/Dynamic_Manager.h	/^    std::vector< std::vector< double > > cur_yolo_people;$/;"	m	class:Dynamic_Manager
cur_yolo_people	navi_manager/include/MDPmanager.h	/^    std::vector< std::vector< double > > cur_yolo_people;$/;"	m	class:MDPManager
dN	navi_manager/include/srBSpline.h	/^	inline double dN( int IndexCP, double u ) { return OneBasisFunDers( IndexCP, u, 1 ); }$/;"	f	class:srBSpline
data_count_	navi_service/src/map_checker.cpp	/^  int data_count_, goal_;$/;"	m	class:Map_Checker	file:
data_count_	navi_service/src/obstacle_checker.cpp	/^  int data_count_, goal_;$/;"	m	class:Obstacle_Checker	file:
ddN	navi_manager/include/srBSpline.h	/^	inline double ddN( int IndexCP, double u ) { return OneBasisFunDers( IndexCP, u, 2 ); }$/;"	f	class:srBSpline
deltaMin	navi_manager/include/Dynamic_Manager.h	52;"	d
deltaMin	navi_manager/include/MDPmanager.h	53;"	d
desired_heading	navi_manager/src/base_conti_actionlib.cpp	/^double desired_heading=0.0;$/;"	v
direction_z	navi_service/src/map_checker.cpp	/^  int direction_z;$/;"	m	class:Map_Checker	file:
direction_z	navi_service/src/obstacle_checker.cpp	/^  int direction_z;$/;"	m	class:Obstacle_Checker	file:
discount	rrt_exploration/scripts/functions.py	/^def discount(mapData,assigned_pt,centroids,infoGain,r):$/;"	f
discreteCtrltoPos	navi_manager/src/PathManager.cpp	/^void PathManager::discreteCtrltoPos(std::vector<double> pos)$/;"	f	class:PathManager
discrete_mode	navi_manager/include/PathManager.h	/^	bool discrete_mode;$/;"	m	class:PathManager
doneMovingCb	frontier_exploration/src/explore_server.cpp	/^    void doneMovingCb(const actionlib::SimpleClientGoalState& state, const move_base_msgs::MoveBaseResultConstPtr& result){$/;"	f	class:frontier_exploration::FrontierExplorationServer	file:
dsrv_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    dynamic_reconfigure::Server<costmap_2d::GenericPluginConfig> *dsrv_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
dyn_Recived_path	navi_manager/include/PathManager.h	/^	std::vector< std::vector<double> > dyn_Recived_path;$/;"	m	class:PathManager
dyn_cur_idx	navi_manager/include/PathManager.h	/^	int dyn_cur_idx;$/;"	m	class:PathManager
dyn_finalTarget	navi_manager/include/PathManager.h	/^	std::vector<double> dyn_finalTarget;$/;"	m	class:PathManager
dyn_lastSubTarget	navi_manager/include/PathManager.h	/^	std::vector<double> dyn_lastSubTarget;$/;"	m	class:PathManager
dyn_path_callback	navi_manager/src/PathManager.cpp	/^void PathManager::dyn_path_callback(const nav_msgs::Path::ConstPtr& msg)$/;"	f	class:PathManager
dyn_path_num	navi_manager/include/Dynamic_Manager.h	/^ 	int     dyn_path_num;$/;"	m	class:Dynamic_Manager
dyn_path_num	navi_manager/include/MDPmanager.h	/^ 	int     dyn_path_num;$/;"	m	class:MDPManager
dyn_path_num	navi_manager/include/dynamic_window.h	/^    int dyn_path_num;$/;"	m	class:Dynamic_window
dyn_pre_idx	navi_manager/include/PathManager.h	/^	int dyn_pre_idx;$/;"	m	class:PathManager
dyn_x_	navi_manager/include/PathManager.h	/^	std::vector<double> dyn_x_;$/;"	m	class:PathManager
dyn_y_	navi_manager/include/PathManager.h	/^	std::vector<double> dyn_y_;$/;"	m	class:PathManager
dynamic_map	navi_service/src/map_checker.cpp	/^  nav_msgs::OccupancyGrid dynamic_map;$/;"	m	class:Map_Checker	file:
dynamic_mapCallback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::dynamic_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
dynamic_mapCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::dynamic_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:MDPManager
dynamic_mapCallback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::dynamic_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Dynamic_window
dynamicmapCallback	navi_service/src/map_checker.cpp	/^  void dynamicmapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Map_Checker
dynamicmapCallback	navi_service/src/obstacle_checker.cpp	/^  void dynamicmapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Obstacle_Checker
dynamicmap_sub	navi_service/src/map_checker.cpp	/^  ros::Subscriber dynamicmap_sub;$/;"	m	class:Map_Checker	file:
dynamicmap_sub	navi_service/src/obstacle_checker.cpp	/^  ros::Subscriber dynamicmap_sub;$/;"	m	class:Obstacle_Checker	file:
end	rrt_exploration/scripts/functions.py	/^	end = PoseStamped()$/;"	v	class:robot
executeCb	frontier_exploration/src/explore_server.cpp	/^    void executeCb(const frontier_exploration::ExploreTaskGoalConstPtr &goal)$/;"	f	class:frontier_exploration::FrontierExplorationServer	file:
exploration_goal	rrt_exploration/src/global_rrt_detector.cpp	/^geometry_msgs::PointStamped exploration_goal;$/;"	v
exploration_goal	rrt_exploration/src/local_rrt_detector.cpp	/^geometry_msgs::PointStamped exploration_goal;$/;"	v
explore_costmap_ros_	frontier_exploration/src/explore_server.cpp	/^    boost::shared_ptr<costmap_2d::Costmap2DROS> explore_costmap_ros_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
feedbackMovingCb	frontier_exploration/src/explore_server.cpp	/^    void feedbackMovingCb(const move_base_msgs::MoveBaseFeedbackConstPtr& feedback){$/;"	f	class:frontier_exploration::FrontierExplorationServer	file:
feedback_	frontier_exploration/src/explore_server.cpp	/^    frontier_exploration::ExploreTaskFeedback feedback_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
filtered_humans_array	navi_manager/include/Dynamic_Manager.h	/^  	visualization_msgs::MarkerArray filtered_humans_array;$/;"	m	class:Dynamic_Manager
filtered_target	navi_manager/include/Dynamic_Manager.h	/^ 	vector<double>    filtered_target;$/;"	m	class:Dynamic_Manager
filterhumanbelief	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::filterhumanbelief()$/;"	f	class:Dynamic_Manager
finalTarget	navi_manager/include/PathManager.h	/^	std::vector<double> finalTarget;$/;"	m	class:PathManager
findSpan	navi_manager/src/srBSpline.cpp	/^bool srBSpline::findSpan( int& ret, double u )$/;"	f	class:srBSpline
finddynpathidx	navi_manager/src/PathManager.cpp	/^int PathManager::finddynpathidx()$/;"	f	class:PathManager
findpathidx	navi_manager/src/PathManager.cpp	/^int PathManager::findpathidx()$/;"	f	class:PathManager
first_global_pose	navi_service/src/map_checker.cpp	/^  std::vector<double> first_global_pose;$/;"	m	class:Map_Checker	file:
first_global_pose	navi_service/src/obstacle_checker.cpp	/^  std::vector<double> first_global_pose;$/;"	m	class:Obstacle_Checker	file:
frequency_	frontier_exploration/src/explore_server.cpp	/^    double frequency_, goal_aliasing_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
frontierCost	frontier_exploration/src/frontier_search.cpp	/^double FrontierSearch::frontierCost(const Frontier& frontier)$/;"	f	class:frontier_exploration::FrontierSearch
frontierService_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::ServiceServer frontierService_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
frontier_cloud_pub	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::Publisher frontier_cloud_pub;$/;"	m	class:frontier_exploration::BoundedExploreLayer
frontier_exploration	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^namespace frontier_exploration$/;"	n
frontier_exploration	frontier_exploration/include/frontier_exploration/costmap_tools.h	/^namespace frontier_exploration{$/;"	n
frontier_exploration	frontier_exploration/include/frontier_exploration/frontier_search.h	/^namespace frontier_exploration{$/;"	n
frontier_exploration	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^namespace frontier_exploration{$/;"	n
frontier_exploration	frontier_exploration/plugins/bounded_explore_layer.cpp	/^namespace frontier_exploration$/;"	n	file:
frontier_exploration	frontier_exploration/src/explore_client.cpp	/^namespace frontier_exploration{$/;"	n	file:
frontier_exploration	frontier_exploration/src/explore_server.cpp	/^namespace frontier_exploration{$/;"	n	file:
frontier_exploration	frontier_exploration/src/frontier_search.cpp	/^namespace frontier_exploration{$/;"	n	file:
frontier_marker_pub	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::Publisher frontier_marker_pub;$/;"	m	class:frontier_exploration::BoundedExploreLayer
frontier_travel_point_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    std::string frontier_travel_point_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
frontiers	rrt_exploration/scripts/assigner.py	/^frontiers=[]$/;"	v
frontiers	rrt_exploration/scripts/filter.py	/^frontiers=[]$/;"	v
functions_H	rrt_exploration/include/functions.h	2;"	d
gain_scale_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    double gain_scale_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
gain_scale_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    double potential_scale_, gain_scale_;$/;"	m	class:frontier_exploration::FrontierSearch
gamma	navi_manager/include/Dynamic_Manager.h	/^ 	double gamma;$/;"	m	class:Dynamic_Manager
gamma	navi_manager/include/MDPmanager.h	/^ 	double gamma;$/;"	m	class:MDPManager
gen_state	rrt_exploration/src/mtrand.cpp	/^void MTRand_int32::gen_state() { \/\/ generate new state vector$/;"	f	class:MTRand_int32
generatePath	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::generatePath()$/;"	f	class:Dynamic_Manager
generatePath	navi_manager/src/MDPmanager.cpp	/^void MDPManager::generatePath()$/;"	f	class:MDPManager
generate_dynamicPath	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::generate_dynamicPath()$/;"	f	class:Dynamic_Manager
generate_dynamicPath	navi_manager/src/MDPmanager.cpp	/^void MDPManager::generate_dynamicPath()$/;"	f	class:MDPManager
getCPs	navi_manager/src/srBSpline.cpp	/^double srBSpline::getCPs(int index)$/;"	f	class:srBSpline
getCameraregion	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::getCameraregion()$/;"	f	class:Dynamic_Manager
getCameraregion	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::getCameraregion()$/;"	f	class:Dynamic_window
getCurveDerPoint	navi_manager/src/srBSpline.cpp	/^bool srBSpline::getCurveDerPoint( double& ret, double u, int d )$/;"	f	class:srBSpline
getCurvePoint	navi_manager/src/srBSpline.cpp	/^bool srBSpline::getCurvePoint( double& ret, double u )$/;"	f	class:srBSpline
getIndexOfLargestElement	navi_manager/src/PathManager.cpp	/^int PathManager::getIndexOfLargestElement(vector<double> arr)$/;"	f	class:PathManager
getMaxValueAction	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::getMaxValueAction(int x_pos, int y_pos,map<int,double>& maxmap)$/;"	f	class:Dynamic_Manager
getMaxValueAction	navi_manager/src/MDPmanager.cpp	/^void MDPManager::getMaxValueAction(int x_pos, int y_pos,map<int,double>& maxmap)$/;"	f	class:MDPManager
getNextFrontier	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::getNextFrontier(geometry_msgs::PoseStamped start_pose, geometry_msgs::PoseStamped &next_frontier){$/;"	f	class:frontier_exploration::BoundedExploreLayer
getNextFrontierService	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::getNextFrontierService(frontier_exploration::GetNextFrontier::Request &req, frontier_exploration::GetNextFrontier::Response &res){$/;"	f	class:frontier_exploration::BoundedExploreLayer
getNumCPs	navi_manager/src/srBSpline.cpp	/^int srBSpline::getNumCPs()$/;"	f	class:srBSpline
getPolicychar	navi_manager/src/Dynamic_Manager.cpp	/^char Dynamic_Manager::getPolicychar(int policyidx)$/;"	f	class:Dynamic_Manager
getPolicychar	navi_manager/src/MDPmanager.cpp	/^char MDPManager::getPolicychar(int policyidx)$/;"	f	class:MDPManager
getPosition	rrt_exploration/scripts/functions.py	/^	def getPosition(self):$/;"	m	class:robot
getState	rrt_exploration/scripts/functions.py	/^	def getState(self):$/;"	m	class:robot
getSurfacePoint	navi_manager/src/srBSpline.cpp	/^bool srBSpline::getSurfacePoint( double& ret, double u, double v )$/;"	f	class:srBSpline
getT0	navi_manager/src/srBSpline.cpp	/^double srBSpline::getT0( void )$/;"	f	class:srBSpline
getTf	navi_manager/src/srBSpline.cpp	/^double srBSpline::getTf( void )$/;"	f	class:srBSpline
getactionvalue	navi_manager/src/Dynamic_Manager.cpp	/^double Dynamic_Manager::getactionvalue(int x_pos, int y_pos, int action_ix)$/;"	f	class:Dynamic_Manager
getactionvalue	navi_manager/src/MDPmanager.cpp	/^double MDPManager::getactionvalue(int x_pos, int y_pos, int action_ix)$/;"	f	class:MDPManager
getdirection	navi_manager/src/PathManager.cpp	/^int PathManager::getdirection(std::vector<double> pos)$/;"	f	class:PathManager
getdistance	navi_manager/src/Dynamic_Manager.cpp	/^double Dynamic_Manager::getdistance(vector<double> cur, vector<double> goal)$/;"	f	class:Dynamic_Manager
getdistance	navi_manager/src/MDPmanager.cpp	/^double MDPManager::getdistance(vector<double> cur, vector<double> goal)$/;"	f	class:MDPManager
getdistance	navi_manager/src/PathManager.cpp	/^double PathManager::getdistance(vector<double> cur, vector<double> goal, int dimension)$/;"	f	class:PathManager
getdistance	navi_manager/src/dynamic_window.cpp	/^double Dynamic_window::getdistance(vector<double> cur, vector<double> goal)$/;"	f	class:Dynamic_window
getfrontier	rrt_exploration/scripts/getfrontier.py	/^def getfrontier(mapData):$/;"	f
getlastDerivate	navi_manager/src/srBSpline.cpp	/^double srBSpline::getlastDerivate()$/;"	f	class:srBSpline
getlinevalue	navi_manager/src/Dynamic_Manager.cpp	/^bool Dynamic_Manager::getlinevalue(int line_type,double input_x, double input_y)$/;"	f	class:Dynamic_Manager
getlinevalue	navi_manager/src/dynamic_window.cpp	/^bool Dynamic_window::getlinevalue(int line_type,double input_x, double input_y)$/;"	f	class:Dynamic_window
getneighboractionset	navi_manager/src/Dynamic_Manager.cpp	/^vector<int> Dynamic_Manager::getneighboractionset(int action_idx)$/;"	f	class:Dynamic_Manager
getneighboractionset	navi_manager/src/MDPmanager.cpp	/^vector<int> MDPManager::getneighboractionset(int action_idx)$/;"	f	class:MDPManager
getsubgoal	navi_manager/src/PathManager.cpp	/^control_msgs::FollowJointTrajectoryGoal PathManager::getsubgoal()$/;"	f	class:PathManager
getsubgoal	navi_manager/src/PathManager.cpp	/^control_msgs::FollowJointTrajectoryGoal PathManager::getsubgoal(std::vector<double> desired_target)$/;"	f	class:PathManager
global1	rrt_exploration/scripts/assigner.py	/^global1=OccupancyGrid()$/;"	v
global2	rrt_exploration/scripts/assigner.py	/^global2=OccupancyGrid()$/;"	v
global3	rrt_exploration/scripts/assigner.py	/^global3=OccupancyGrid()$/;"	v
globalMap	rrt_exploration/scripts/filter.py	/^def globalMap(data):$/;"	f
global_frame_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    std::string global_frame_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
global_pose	navi_manager/include/Dynamic_Manager.h	/^	std::vector<double> global_pose;$/;"	m	class:Dynamic_Manager
global_pose	navi_manager/include/MDPmanager.h	/^ 	std::vector<double> global_pose;$/;"	m	class:MDPManager
global_pose	navi_manager/include/PathManager.h	/^	std::vector<double> global_pose;$/;"	m	class:PathManager
global_pose	navi_manager/include/dynamic_window.h	/^	std::vector<double> global_pose;$/;"	m	class:Dynamic_window
global_pose	navi_service/src/map_checker.cpp	/^  std::vector<double> global_pose;$/;"	m	class:Map_Checker	file:
global_pose	navi_service/src/obstacle_checker.cpp	/^  std::vector<double> global_pose;$/;"	m	class:Obstacle_Checker	file:
global_pose_callback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
global_pose_callback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:MDPManager
global_pose_callback	navi_manager/src/PathManager.cpp	/^void PathManager::global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:PathManager
global_pose_callback	navi_manager/src/base_actionlib.cpp	/^void global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f
global_pose_callback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:Dynamic_window
global_pose_callback	navi_service/src/map_checker.cpp	/^  void global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:Map_Checker
global_pose_callback	navi_service/src/obstacle_checker.cpp	/^  void global_pose_callback(const geometry_msgs::PoseStamped::ConstPtr& msg)$/;"	f	class:Obstacle_Checker
globalmaps	rrt_exploration/scripts/assigner.py	/^globalmaps=[]$/;"	v
globalmaps	rrt_exploration/scripts/filter.py	/^globalmaps=[]$/;"	v
globalpose_sub	navi_service/src/map_checker.cpp	/^  ros::Subscriber globalpose_sub;$/;"	m	class:Map_Checker	file:
globalpose_sub	navi_service/src/obstacle_checker.cpp	/^  ros::Subscriber globalpose_sub;$/;"	m	class:Obstacle_Checker	file:
goTarget	navi_service/src/navi_service_node.cpp	/^bool villa_navi_srv::goTarget(navi_service::GoTargetPos::Request &req, navi_service::GoTargetPos::Response &res)$/;"	f	class:villa_navi_srv
goal	rrt_exploration/scripts/functions.py	/^	goal = MoveBaseGoal()$/;"	v	class:robot
goalOnBlacklist	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::goalOnBlacklist(const geometry_msgs::Point& goal)$/;"	f	class:frontier_exploration::BoundedExploreLayer
goal_	navi_service/src/map_checker.cpp	/^  int data_count_, goal_;$/;"	m	class:Map_Checker	file:
goal_	navi_service/src/obstacle_checker.cpp	/^  int data_count_, goal_;$/;"	m	class:Obstacle_Checker	file:
goal_aliasing_	frontier_exploration/src/explore_server.cpp	/^    double frequency_, goal_aliasing_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
gridValue	rrt_exploration/scripts/functions.py	/^def gridValue(mapData,Xp):$/;"	f
gridValue	rrt_exploration/src/functions.cpp	/^int gridValue(nav_msgs::OccupancyGrid &mapData,std::vector<float> Xp){$/;"	f
gui_start	navi_manager/scripts/gui_move.py	/^def gui_start():$/;"	f
half_pathsize	navi_manager/include/PathManager.h	/^	int half_pathsize;$/;"	m	class:PathManager
handleButton	navi_manager/scripts/gui_move.py	/^  def handleButton(self):$/;"	m	class:SpeechGui
head_cmd_pub	navi_manager/include/PathManager.h	/^    ros::Publisher head_cmd_pub;$/;"	m	class:PathManager
headiter	navi_manager/include/PathManager.h	/^	int headiter;$/;"	m	class:PathManager
hsrb_base_pose	navi_manager/include/PathManager.h	/^	std::vector<double> hsrb_base_pose;$/;"	m	class:PathManager
hsrb_odomCallback	navi_manager/src/base_actionlib.cpp	/^void hsrb_odomCallback(const nav_msgs::Odometry ::ConstPtr& msg)$/;"	f
hsrb_odomCallback	navi_manager/src/base_conti_actionlib.cpp	/^void hsrb_odomCallback(const nav_msgs::Odometry::ConstPtr& msg)$/;"	f
human_callback_count	navi_manager/include/Dynamic_Manager.h	/^ 	int               human_callback_count;$/;"	m	class:Dynamic_Manager
human_callback_count	navi_manager/include/MDPmanager.h	/^ 	int               human_callback_count;$/;"	m	class:MDPManager
human_global	navi_manager/include/Dynamic_Manager.h	/^ 	vector<float>	  human_global;$/;"	m	class:Dynamic_Manager
human_global	navi_manager/include/MDPmanager.h	/^ 	vector<float>	  human_global;$/;"	m	class:MDPManager
human_leg_boxes_array	navi_manager/include/Dynamic_Manager.h	/^  	visualization_msgs::MarkerArray human_leg_boxes_array;$/;"	m	class:Dynamic_Manager
human_leg_callback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::human_leg_callback(const geometry_msgs::PoseArray::ConstPtr& msg)$/;"	f	class:MDPManager
human_occupied_idx	navi_manager/include/Dynamic_Manager.h	/^    std::vector<int> human_occupied_idx;$/;"	m	class:Dynamic_Manager
human_occupied_idx	navi_manager/include/dynamic_window.h	/^    std::vector<int> human_occupied_idx;$/;"	m	class:Dynamic_window
human_occupied_leg_idx	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> human_occupied_leg_idx;$/;"	m	class:Dynamic_Manager
human_occupied_leg_idx	navi_manager/include/dynamic_window.h	/^	std::vector<int> human_occupied_leg_idx;$/;"	m	class:Dynamic_window
i	rrt_exploration/include/functions.h	/^int i;$/;"	m	class:rdm
id	navi_manager/scripts/human_marker.py	/^   id = 0$/;"	v
index_of_point	rrt_exploration/scripts/functions.py	/^def index_of_point(mapData,Xp):$/;"	f
informationGain	rrt_exploration/scripts/functions.py	/^def informationGain(mapData,point,r):$/;"	f
init	rrt_exploration/include/mtrand.h	/^  static bool init; \/\/ true if init function is called$/;"	m	class:MTRand_int32
init	rrt_exploration/src/mtrand.cpp	/^bool MTRand_int32::init = false;$/;"	m	class:MTRand_int32	file:
init_map_x	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
init_map_x	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
init_map_y	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
init_map_y	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
input_	frontier_exploration/src/explore_client.cpp	/^    geometry_msgs::PolygonStamped input_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
int_msg	navi_manager/scripts/human_marker.py	/^   int_msg=std_msgs.msg.Int8()$/;"	v
intcallback	navi_manager/scripts/base_move.py	/^    def intcallback(self, data):$/;"	m	class:BaseMoveCBA
isDiscretized	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    bool isDiscretized()$/;"	f	class:frontier_exploration::BoundedExploreLayer
isNewFrontierCell	frontier_exploration/src/frontier_search.cpp	/^bool FrontierSearch::isNewFrontierCell(unsigned int idx, const std::vector<bool>& frontier_flag){$/;"	f	class:frontier_exploration::FrontierSearch
joint_states_callback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::joint_states_callback(const sensor_msgs::JointState::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
joint_states_callback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::joint_states_callback(const sensor_msgs::JointState::ConstPtr& msg)$/;"	f	class:Dynamic_window
kOriginLink	navi_manager/src/base_actionlib.cpp	/^const char* kOriginLink = "odom";$/;"	v
kRobotBaseLink	navi_manager/src/base_actionlib.cpp	/^const char* kRobotBaseLink = "base_link";$/;"	v
lastSubTarget	navi_manager/include/PathManager.h	/^	std::vector<double> lastSubTarget;$/;"	m	class:PathManager
last_markers_count_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    int last_markers_count_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
leg_targetSet	navi_manager/include/Dynamic_Manager.h	/^    std::vector< std::vector<double> > leg_targetSet;$/;"	m	class:Dynamic_Manager
line	rrt_exploration/src/global_rrt_detector.cpp	/^visualization_msgs::Marker points,line;$/;"	v
line	rrt_exploration/src/local_rrt_detector.cpp	/^visualization_msgs::Marker points,line;$/;"	v
listener	navi_manager/include/Dynamic_Manager.h	/^ 	tf::TransformListener 	  listener;$/;"	m	class:Dynamic_Manager
listener	navi_manager/include/MDPmanager.h	/^ 	tf::TransformListener 	  listener;$/;"	m	class:MDPManager
listener	navi_manager/include/PathManager.h	/^ 	tf::TransformListener     listener;$/;"	m	class:PathManager
listener	navi_manager/include/dynamic_window.h	/^ 	tf::TransformListener 	  listener;$/;"	m	class:Dynamic_window
listener	navi_manager/scripts/base_move.py	/^    def listener(self,wait=0.0):$/;"	m	class:BaseMoveCBA
listener	navi_service/include/navi_service_node.h	/^	tf::TransformListener 	  listener;$/;"	m	class:villa_navi_srv
listener	navi_service/src/clicked_navi_test.cpp	/^  tf::TransformListener     listener;$/;"	m	class:click_navi_manager	file:
listener	navi_service/src/map_checker.cpp	/^  tf::TransformListener   listener;$/;"	m	class:Map_Checker	file:
listener	navi_service/src/obstacle_checker.cpp	/^  tf::TransformListener   listener;$/;"	m	class:Obstacle_Checker	file:
m	rrt_exploration/include/mtrand.h	/^  static const int n = 624, m = 397; \/\/ compile time constants$/;"	m	class:MTRand_int32
m_ControlPoints	navi_manager/include/srBSpline.h	/^	double* m_ControlPoints;	\/\/ control points$/;"	m	class:srBSpline
m_ControlPointsarray	navi_manager/include/srBSpline.h	/^	double** m_ControlPointsarray;	\/\/ control points for V $/;"	m	class:srBSpline
m_CubicSpline_x	navi_manager/include/Dynamic_Manager.h	/^ 	srBSpline*          m_CubicSpline_x;$/;"	m	class:Dynamic_Manager
m_CubicSpline_x	navi_manager/include/MDPmanager.h	/^ 	srBSpline*           m_CubicSpline_x;$/;"	m	class:MDPManager
m_CubicSpline_x	navi_manager/include/dynamic_window.h	/^ 	srBSpline*       m_CubicSpline_x;$/;"	m	class:Dynamic_window
m_CubicSpline_y	navi_manager/include/Dynamic_Manager.h	/^ 	srBSpline*          m_CubicSpline_y;$/;"	m	class:Dynamic_Manager
m_CubicSpline_y	navi_manager/include/MDPmanager.h	/^ 	srBSpline*           m_CubicSpline_y;$/;"	m	class:MDPManager
m_CubicSpline_y	navi_manager/include/dynamic_window.h	/^ 	srBSpline*       m_CubicSpline_y;$/;"	m	class:Dynamic_window
m_Degree	navi_manager/include/srBSpline.h	/^	int m_Degree;				\/\/ degree of the curve$/;"	m	class:srBSpline
m_Goal	navi_manager/include/Dynamic_Manager.h	/^  	vector<int>       m_Goal;							\/\/Goal position of (x,y)$/;"	m	class:Dynamic_Manager
m_Goal	navi_manager/include/MDPmanager.h	/^  	vector<int>       m_Goal;							\/\/Goal position of (x,y)$/;"	m	class:MDPManager
m_Knots	navi_manager/include/srBSpline.h	/^	double* m_Knots;			\/\/ knots$/;"	m	class:srBSpline
m_KnotsV	navi_manager/include/srBSpline.h	/^	double* m_KnotsV;			\/\/ knots for V $/;"	m	class:srBSpline
m_NumCPs	navi_manager/include/srBSpline.h	/^	int m_NumCPs;				\/\/ number of control points$/;"	m	class:srBSpline
m_NumCPsV	navi_manager/include/srBSpline.h	/^	int m_NumCPsV;				\/\/ number of control points for V$/;"	m	class:srBSpline
m_NumKnots	navi_manager/include/srBSpline.h	/^	int m_NumKnots;				\/\/ number of knots$/;"	m	class:srBSpline
m_NumKnotsV	navi_manager/include/srBSpline.h	/^	int m_NumKnotsV;			\/\/ number of knots for V $/;"	m	class:srBSpline
m_Robot	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>       m_Robot;					    	\/\/Current Robot position of (x,y)$/;"	m	class:Dynamic_Manager
m_Robot	navi_manager/include/MDPmanager.h	/^ 	vector<int>       m_Robot;					    	\/\/Current Robot position of (x,y)$/;"	m	class:MDPManager
m_Spline	navi_manager/include/Dynamic_Manager.h	/^ 	srBSpline*          m_Spline;$/;"	m	class:Dynamic_Manager
m_Spline	navi_manager/include/MDPmanager.h	/^ 	srBSpline*           m_Spline;$/;"	m	class:MDPManager
m_Spline	navi_manager/include/dynamic_window.h	/^ 	srBSpline*       m_Spline;$/;"	m	class:Dynamic_window
m_Start	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>		  m_Start;							\/\/Start position of(x,y)$/;"	m	class:Dynamic_Manager
m_Start	navi_manager/include/MDPmanager.h	/^ 	vector<int>		  m_Start;							\/\/Start position of(x,y)$/;"	m	class:MDPManager
m_boolPath	navi_manager/include/MDPmanager.h	/^ 	bool    m_boolPath;$/;"	m	class:MDPManager
m_boolSolve	navi_manager/include/Dynamic_Manager.h	/^ 	bool    m_boolSolve;$/;"	m	class:Dynamic_Manager
m_boolSolve	navi_manager/include/MDPmanager.h	/^ 	bool    m_boolSolve;$/;"	m	class:MDPManager
m_cell_x_width	navi_manager/include/MapParam.h	/^   	float 		  		m_cell_x_width;$/;"	m	class:MapParam
m_cell_y_width	navi_manager/include/MapParam.h	/^	float 		  		m_cell_y_width;$/;"	m	class:MapParam
m_client	navi_service/src/map_checker.cpp	/^  ros::ServiceClient m_client;$/;"	m	class:Map_Checker	file:
m_client	navi_service/src/obstacle_checker.cpp	/^  ros::ServiceClient m_client;$/;"	m	class:Obstacle_Checker	file:
m_currentpose	navi_service/src/map_checker.cpp	/^  geometry_msgs::Pose m_currentpose;$/;"	m	class:Map_Checker	file:
m_currentpose	navi_service/src/obstacle_checker.cpp	/^  geometry_msgs::Pose m_currentpose;$/;"	m	class:Obstacle_Checker	file:
m_desired_heading	navi_manager/include/Dynamic_Manager.h	/^ 	double	m_desired_heading;$/;"	m	class:Dynamic_Manager
m_desired_heading	navi_manager/include/MDPmanager.h	/^ 	double	m_desired_heading;$/;"	m	class:MDPManager
m_dynamic_obs	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>		  m_dynamic_obs;$/;"	m	class:Dynamic_Manager
m_dynamic_obs	navi_manager/include/MDPmanager.h	/^ 	vector<int>		  m_dynamic_obs;$/;"	m	class:MDPManager
m_dynamic_occupancy	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>       m_dynamic_occupancy;$/;"	m	class:Dynamic_Manager
m_dynamic_occupancy	navi_manager/include/MDPmanager.h	/^ 	vector<int>       m_dynamic_occupancy;$/;"	m	class:MDPManager
m_dynamic_occupancy	navi_manager/include/dynamic_window.h	/^ 	vector<int>       m_dynamic_occupancy;$/;"	m	class:Dynamic_window
m_human_obs	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>		  m_human_obs;$/;"	m	class:Dynamic_Manager
m_human_obs	navi_manager/include/MDPmanager.h	/^ 	vector<int>		  m_human_obs;$/;"	m	class:MDPManager
m_localoccupancy	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>       m_localoccupancy;$/;"	m	class:Dynamic_Manager
m_localoccupancy	navi_manager/include/MDPmanager.h	/^ 	vector<int>       m_localoccupancy;$/;"	m	class:MDPManager
m_node	navi_manager/include/Dynamic_Manager.h	/^	ros::NodeHandle  m_node;$/;"	m	class:Dynamic_Manager
m_node	navi_manager/include/MDPmanager.h	/^	ros::NodeHandle  m_node;$/;"	m	class:MDPManager
m_node	navi_manager/include/PathManager.h	/^ 	ros::NodeHandle m_node;$/;"	m	class:PathManager
m_node	navi_manager/include/dynamic_window.h	/^	ros::NodeHandle  m_node;$/;"	m	class:Dynamic_window
m_static_obs	navi_manager/include/Dynamic_Manager.h	/^ 	vector<int>		  m_static_obs;$/;"	m	class:Dynamic_Manager
m_static_obs	navi_manager/include/MDPmanager.h	/^ 	vector<int>		  m_static_obs;$/;"	m	class:MDPManager
main	frontier_exploration/src/explore_client.cpp	/^int main(int argc, char** argv)$/;"	f
main	frontier_exploration/src/explore_server.cpp	/^int main(int argc, char** argv)$/;"	f
main	frontier_exploration/src/test/costmap_tools_tests.cpp	/^int main(int argc, char **argv){$/;"	f
main	frontier_exploration/src/test/frontier_search_tests.cpp	/^int main(int argc, char **argv){$/;"	f
main	frontier_exploration/src/test/geometry_tools_tests.cpp	/^int main(int argc, char **argv){$/;"	f
main	navi_manager/src/base_actionlib.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_manager/src/base_conti_actionlib.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_manager/src/dynamic_planner.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_manager/src/follow_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_manager/src/global_planner.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_manager/src/window_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_service/src/clicked_navi_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_service/src/map_checker.cpp	/^int main(int argc, char** argv)$/;"	f
main	navi_service/src/obstacle_checker.cpp	/^int main(int argc, char** argv)$/;"	f
main	navi_service/src/service_client.cpp	/^int main(int argc, char **argv)$/;"	f
main	navi_service/src/service_test.cpp	/^int main(int argc, char **argv)$/;"	f
main	rrt_exploration/src/global_rrt_detector.cpp	/^int main(int argc, char **argv)$/;"	f
main	rrt_exploration/src/local_rrt_detector.cpp	/^int main(int argc, char **argv)$/;"	f
makePlan	rrt_exploration/scripts/functions.py	/^	def makePlan(self,start,end):$/;"	m	class:robot
mapCallBack	rrt_exploration/scripts/assigner.py	/^def mapCallBack(data):$/;"	f
mapCallBack	rrt_exploration/scripts/filter.py	/^def mapCallBack(data):$/;"	f
mapCallBack	rrt_exploration/scripts/frontier_opencv_detector.py	/^def mapCallBack(data):$/;"	f
mapCallBack	rrt_exploration/src/global_rrt_detector.cpp	/^void mapCallBack(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f
mapCallBack	rrt_exploration/src/local_rrt_detector.cpp	/^void mapCallBack(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f
mapData	rrt_exploration/scripts/assigner.py	/^mapData=OccupancyGrid()$/;"	v
mapData	rrt_exploration/scripts/filter.py	/^mapData=OccupancyGrid()$/;"	v
mapData	rrt_exploration/scripts/frontier_opencv_detector.py	/^mapData=OccupancyGrid()$/;"	v
mapData	rrt_exploration/src/global_rrt_detector.cpp	/^nav_msgs::OccupancyGrid mapData;$/;"	v
mapData	rrt_exploration/src/local_rrt_detector.cpp	/^nav_msgs::OccupancyGrid mapData;$/;"	v
mapUpdateKeepObstacles	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::mapUpdateKeepObstacles(costmap_2d::Costmap2D& master_grid, int min_i, int min_j, int max_i, int max_j){$/;"	f	class:frontier_exploration::BoundedExploreLayer
map_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    unsigned char* map_;$/;"	m	class:frontier_exploration::FrontierSearch
map_step	navi_manager/include/MapParam.h	/^    double   		  	map_step;$/;"	m	class:MapParam
marked_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    bool configured_, marked_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
marker	navi_manager/scripts/human_marker.py	/^   marker = Marker()$/;"	v
marker2	navi_manager/scripts/human_marker.py	/^   marker2 = Marker()$/;"	v
marker3	navi_manager/scripts/human_marker.py	/^   marker3 = Marker()$/;"	v
markerArray	navi_manager/scripts/human_marker.py	/^markerArray = MarkerArray()$/;"	v
marker_seq	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    int marker_seq;$/;"	m	class:frontier_exploration::BoundedExploreLayer
matchSize	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::matchSize(){$/;"	f	class:frontier_exploration::BoundedExploreLayer
max_off_yolo_laser	navi_manager/include/Dynamic_Manager.h	56;"	d
maxiter	navi_manager/include/Dynamic_Manager.h	/^ 	int maxiter;$/;"	m	class:Dynamic_Manager
maxiter	navi_manager/include/MDPmanager.h	/^ 	int maxiter;$/;"	m	class:MDPManager
mdp_pathCallback	navi_manager/src/base_conti_actionlib.cpp	/^void mdp_pathCallback(const nav_msgs::Path::ConstPtr& msg)$/;"	f
mdppath_callback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::mdppath_callback(const nav_msgs::Path::ConstPtr & msg)$/;"	f	class:Dynamic_Manager
mdppath_callback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::mdppath_callback(const nav_msgs::Path::ConstPtr & msg)$/;"	f	class:Dynamic_window
min_frontier_size_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    int min_frontier_size_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
min_frontier_size_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    int min_frontier_size_;$/;"	m	class:frontier_exploration::FrontierSearch
min_two_leg_dist	navi_manager/include/Dynamic_Manager.h	55;"	d
move_client_	frontier_exploration/src/explore_server.cpp	/^    actionlib::SimpleActionClient<move_base_msgs::MoveBaseAction> move_client_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
move_client_goal_	frontier_exploration/src/explore_server.cpp	/^    move_base_msgs::MoveBaseGoal move_client_goal_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
move_client_lock_	frontier_exploration/src/explore_server.cpp	/^    boost::mutex move_client_lock_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
movebase_pub	frontier_exploration/src/explore_server.cpp	/^    ros::Publisher movebase_pub;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
moving_	frontier_exploration/src/explore_server.cpp	/^    bool success_, moving_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
n	rrt_exploration/include/mtrand.h	/^  static const int n = 624, m = 397; \/\/ compile time constants$/;"	m	class:MTRand_int32
nav_client	navi_manager/include/PathManager.h	/^ 	ros::ServiceClient nav_client;$/;"	m	class:PathManager
nav_cmd_pub	navi_manager/include/PathManager.h	/^	ros::Publisher nav_cmd_pub;$/;"	m	class:PathManager
navtarget_pose	navi_service/src/map_checker.cpp	/^  std::vector<double> navtarget_pose;$/;"	m	class:Map_Checker	file:
navtarget_pose	navi_service/src/obstacle_checker.cpp	/^  std::vector<double> navtarget_pose;$/;"	m	class:Obstacle_Checker	file:
nearestCell	frontier_exploration/include/frontier_exploration/costmap_tools.h	/^bool nearestCell(unsigned int &result, unsigned int start, unsigned char val, const costmap_2d::Costmap2D& costmap){$/;"	f	namespace:frontier_exploration
nh_	frontier_exploration/src/explore_client.cpp	/^    ros::NodeHandle nh_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
nh_	frontier_exploration/src/explore_server.cpp	/^    ros::NodeHandle nh_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
nh_	navi_service/src/map_checker.cpp	/^  ros::NodeHandle nh_;$/;"	m	class:Map_Checker	file:
nh_	navi_service/src/obstacle_checker.cpp	/^  ros::NodeHandle nh_;$/;"	m	class:Obstacle_Checker	file:
nhood4	frontier_exploration/include/frontier_exploration/costmap_tools.h	/^std::vector<unsigned int> nhood4(unsigned int idx, const costmap_2d::Costmap2D& costmap){$/;"	f	namespace:frontier_exploration
nhood8	frontier_exploration/include/frontier_exploration/costmap_tools.h	/^std::vector<unsigned int> nhood8(unsigned int idx, const costmap_2d::Costmap2D& costmap){$/;"	f	namespace:frontier_exploration
node	rrt_exploration/scripts/assigner.py	/^def node():$/;"	f
node	rrt_exploration/scripts/filter.py	/^def node():$/;"	f
node	rrt_exploration/scripts/frontier_opencv_detector.py	/^def node():$/;"	f
num_of_detected_human_yolo	navi_manager/include/Dynamic_Manager.h	/^ 	int  			  num_of_detected_human_yolo;$/;"	m	class:Dynamic_Manager
num_of_detected_human_yolo	navi_manager/include/MDPmanager.h	/^ 	int  			  num_of_detected_human_yolo;$/;"	m	class:MDPManager
num_of_detected_human_yolo	navi_manager/include/dynamic_window.h	/^ 	int  			  num_of_detected_human_yolo;$/;"	m	class:Dynamic_window
obsmap_Pub	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   obsmap_Pub;$/;"	m	class:Dynamic_Manager
obsmap_Pub	navi_manager/include/MDPmanager.h	/^	ros::Publisher   obsmap_Pub;$/;"	m	class:MDPManager
occ1_pub	navi_service/src/map_checker.cpp	/^  ros::Publisher occ1_pub;$/;"	m	class:Map_Checker	file:
occ1_pub	navi_service/src/obstacle_checker.cpp	/^  ros::Publisher occ1_pub;$/;"	m	class:Obstacle_Checker	file:
occ2_pub	navi_service/src/map_checker.cpp	/^  ros::Publisher occ2_pub;$/;"	m	class:Map_Checker	file:
occ2_pub	navi_service/src/obstacle_checker.cpp	/^  ros::Publisher occ2_pub;$/;"	m	class:Obstacle_Checker	file:
odometryInput	navi_manager/scripts/base_move.py	/^    def odometryInput(self, data):$/;"	m	class:BaseMoveCBA
onInitialize	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::onInitialize(){$/;"	f	class:frontier_exploration::BoundedExploreLayer
operator &	navi_manager/include/srBSpline.h	/^	const srBSpline* operator&() const { return this; }$/;"	f	class:srBSpline
operator &	navi_manager/include/srBSpline.h	/^	srBSpline* operator&() { return this; }$/;"	f	class:srBSpline
operator ()	rrt_exploration/include/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand
operator ()	rrt_exploration/include/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand53
operator ()	rrt_exploration/include/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand_closed
operator ()	rrt_exploration/include/mtrand.h	/^  double operator()() {$/;"	f	class:MTRand_open
operator ()	rrt_exploration/include/mtrand.h	/^  unsigned long operator()() { return rand_int32(); }$/;"	f	class:MTRand_int32
operator =	navi_manager/src/srBSpline.cpp	/^const srBSpline& srBSpline::operator=( const srBSpline& T )$/;"	f	class:srBSpline
p	navi_manager/include/srBSpline.h	/^	inline int p( void ) { return m_Degree; }$/;"	f	class:srBSpline
p	rrt_exploration/include/mtrand.h	/^  static int p; \/\/ position in state array$/;"	m	class:MTRand_int32
p	rrt_exploration/src/mtrand.cpp	/^int MTRand_int32::p = 0;$/;"	m	class:MTRand_int32	file:
pMapParam	navi_manager/include/Dynamic_Manager.h	/^ 	MapParam* 	pMapParam;$/;"	m	class:Dynamic_Manager
pMapParam	navi_manager/include/MDPmanager.h	/^ 	MapParam* 	pMapParam;$/;"	m	class:MDPManager
pMapParam	navi_manager/include/dynamic_window.h	/^ 	MapParam* 	pMapParam;$/;"	m	class:Dynamic_window
path	navi_manager/include/Dynamic_Manager.h	/^	nav_msgs::Path path;$/;"	m	class:Dynamic_Manager
path	navi_manager/include/MDPmanager.h	/^	nav_msgs::Path 		path;$/;"	m	class:MDPManager
path	navi_manager/include/dynamic_window.h	/^	nav_msgs::Path path;$/;"	m	class:Dynamic_window
pathCost	rrt_exploration/scripts/functions.py	/^def pathCost(path):$/;"	f
pathPublish	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::pathPublish(){$/;"	f	class:Dynamic_Manager
pathPublish	navi_manager/src/MDPmanager.cpp	/^void MDPManager::pathPublish(){$/;"	f	class:MDPManager
pathSize	navi_manager/include/PathManager.h	/^	int pathSize;$/;"	m	class:PathManager
pathSize	navi_manager/src/base_actionlib.cpp	/^static int pathSize=2;$/;"	v	file:
pathSize	navi_manager/src/base_conti_actionlib.cpp	/^static int pathSize=2;$/;"	v	file:
path_indx	navi_manager/src/base_actionlib.cpp	/^static int path_indx=0;$/;"	v	file:
path_indx	navi_manager/src/base_conti_actionlib.cpp	/^static int path_indx=0;$/;"	v	file:
people_measurement_pub_	navi_manager/include/Dynamic_Manager.h	/^	ros::Publisher   people_measurement_pub_;$/;"	m	class:Dynamic_Manager
pointCb	frontier_exploration/src/explore_client.cpp	/^    void pointCb(const geometry_msgs::PointStampedConstPtr& point){$/;"	f	class:frontier_exploration::FrontierExplorationClient	file:
pointInPolygon	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  bool pointInPolygon(const T &point, const geometry_msgs::Polygon &polygon){$/;"	f	namespace:frontier_exploration
point_	frontier_exploration/src/explore_client.cpp	/^    ros::Subscriber point_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
point_of_index	rrt_exploration/scripts/functions.py	/^def point_of_index(mapData,i):$/;"	f
point_viz_pub_	frontier_exploration/src/explore_client.cpp	/^    ros::Publisher point_viz_pub_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
point_viz_timer_	frontier_exploration/src/explore_client.cpp	/^    ros::WallTimer point_viz_timer_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
points	rrt_exploration/src/global_rrt_detector.cpp	/^visualization_msgs::Marker points,line;$/;"	v
points	rrt_exploration/src/local_rrt_detector.cpp	/^visualization_msgs::Marker points,line;$/;"	v
pointsDistance	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  double pointsDistance(const T &one, const S &two){$/;"	f	namespace:frontier_exploration
pointsNearby	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  bool pointsNearby(const T &one, const S &two, const double &proximity){$/;"	f	namespace:frontier_exploration
polygonPerimeter	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  double polygonPerimeter(const geometry_msgs::Polygon &polygon){$/;"	f	namespace:frontier_exploration
polygonService_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    ros::ServiceServer polygonService_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
polygon_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    geometry_msgs::Polygon polygon_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
polygon_	frontier_exploration/src/test/geometry_tools_tests.cpp	/^    geometry_msgs::Polygon polygon_;$/;"	m	class:PointInPolygonTest	file:
pomdp_cmd_callback	navi_manager/src/PathManager.cpp	/^void PathManager::pomdp_cmd_callback(const std_msgs::Int8::ConstPtr& msg)$/;"	f	class:PathManager
pose2_orientation	navi_manager/scripts/people_marker.py	/^   pose2_orientation = Quaternion()$/;"	v
pose2_position	navi_manager/scripts/people_marker.py	/^   pose2_position = Point()$/;"	v
pose_orientation	navi_manager/scripts/people_marker.py	/^   pose_orientation = Quaternion()$/;"	v
pose_position	navi_manager/scripts/people_marker.py	/^   pose_position = Point()$/;"	v
posesArray	navi_manager/scripts/people_marker.py	/^posesArray = PoseArray()$/;"	v
potential_scale_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    double potential_scale_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
potential_scale_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    double potential_scale_, gain_scale_;$/;"	m	class:frontier_exploration::FrontierSearch
pre_idx	navi_manager/include/PathManager.h	/^	int pre_idx;$/;"	m	class:PathManager
preemptCb	frontier_exploration/src/explore_server.cpp	/^    void preemptCb(){$/;"	f	class:frontier_exploration::FrontierExplorationServer	file:
printPath	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::printPath()$/;"	f	class:Dynamic_Manager
printPath	navi_manager/src/MDPmanager.cpp	/^void MDPManager::printPath()$/;"	f	class:MDPManager
private_nh_	frontier_exploration/src/explore_client.cpp	/^    ros::NodeHandle private_nh_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
private_nh_	frontier_exploration/src/explore_server.cpp	/^    ros::NodeHandle private_nh_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
process_target	navi_service/src/map_checker.cpp	/^    bool process_target(double goal_x, double goal_y,double goal_theta){$/;"	f	class:Map_Checker
process_target	navi_service/src/obstacle_checker.cpp	/^    bool process_target(double goal_x, double goal_y,double goal_theta){$/;"	f	class:Obstacle_Checker
pub	navi_manager/scripts/human_marker.py	/^pub = rospy.Publisher('\/Int_cmd_trackhuman', Int8, queue_size=10)$/;"	v
publishViewTpointTarget	navi_manager/src/PathManager.cpp	/^void PathManager::publishViewTpointTarget()$/;"	f	class:PathManager
publishZeropaths	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::publishZeropaths()$/;"	f	class:Dynamic_Manager
publishZeropaths	navi_manager/src/MDPmanager.cpp	/^void MDPManager::publishZeropaths()$/;"	f	class:MDPManager
publish_cameraregion	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::publish_cameraregion()$/;"	f	class:Dynamic_Manager
publish_cameraregion	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::publish_cameraregion()$/;"	f	class:Dynamic_window
publish_filtered_human_boxes	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::publish_filtered_human_boxes()$/;"	f	class:Dynamic_Manager
publish_viewpointTarget	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::publish_viewpointTarget(){$/;"	f	class:Dynamic_Manager
publisher	navi_manager/scripts/human_marker.py	/^publisher = rospy.Publisher(topic, Marker,queue_size=10)$/;"	v
publishnum	navi_manager/include/Dynamic_Manager.h	/^ 	int publishnum;$/;"	m	class:Dynamic_Manager
publishnum	navi_manager/include/MDPmanager.h	/^ 	int publishnum;$/;"	m	class:MDPManager
publishpaths	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::publishpaths()$/;"	f	class:Dynamic_Manager
publishpaths	navi_manager/src/MDPmanager.cpp	/^void MDPManager::publishpaths()$/;"	f	class:MDPManager
put_human_occ_map_leg	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::put_human_occ_map_leg()$/;"	f	class:Dynamic_Manager
put_human_occ_map_yolo	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::put_human_occ_map_yolo()$/;"	f	class:Dynamic_Manager
put_human_surrounding_beliefmap	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::put_human_surrounding_beliefmap(int idx, double value)$/;"	f	class:Dynamic_Manager
r	rrt_exploration/src/global_rrt_detector.cpp	/^rdm r; \/\/ for genrating random numbers$/;"	v
r	rrt_exploration/src/local_rrt_detector.cpp	/^rdm r; \/\/ for genrating random numbers$/;"	v
ra	navi_manager/include/Dynamic_Manager.h	60;"	d
ra	navi_manager/include/MDPmanager.h	59;"	d
rand_int32	rrt_exploration/include/mtrand.h	/^inline unsigned long MTRand_int32::rand_int32() { \/\/ generate 32 bit random int$/;"	f	class:MTRand_int32
randomize	rrt_exploration/src/functions.cpp	/^float rdm::randomize() { i=i+1;  srand (i);  return float(rand())\/float(RAND_MAX);}$/;"	f	class:rdm
rdm	rrt_exploration/include/functions.h	/^class rdm{$/;"	c
rdm	rrt_exploration/src/functions.cpp	/^rdm::rdm() {i=time(0);}$/;"	f	class:rdm
real_s	navi_manager/include/types.h	/^	typedef double			real_s;$/;"	t
real_s	navi_manager/include/types.h	/^	typedef float			real_s;$/;"	t
reconfigureCB	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::reconfigureCB(costmap_2d::GenericPluginConfig &config, uint32_t level){$/;"	f	class:frontier_exploration::BoundedExploreLayer
reset	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::reset(){$/;"	f	class:frontier_exploration::BoundedExploreLayer
resize_to_boundary_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    bool resize_to_boundary_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
resolution	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
resolution	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
retry_	frontier_exploration/src/explore_server.cpp	/^    int retry_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
robot	rrt_exploration/scripts/functions.py	/^class robot:$/;"	c
rvizCallBack	rrt_exploration/src/global_rrt_detector.cpp	/^void rvizCallBack(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f
rvizCallBack	rrt_exploration/src/local_rrt_detector.cpp	/^void rvizCallBack(const geometry_msgs::PointStamped::ConstPtr& msg)$/;"	f
scaling	navi_manager/include/Dynamic_Manager.h	/^	int  scaling=12;$/;"	m	class:Dynamic_Manager
scaling	navi_manager/include/MDPmanager.h	/^	int  scaling=12;$/;"	m	class:MDPManager
scaling	navi_manager/include/dynamic_window.h	/^	int  scaling=12;$/;"	m	class:Dynamic_window
scan_mode	navi_manager/include/PathManager.h	/^	bool scan_mode;$/;"	m	class:PathManager
searchFrom	frontier_exploration/src/frontier_search.cpp	/^std::vector<Frontier> FrontierSearch::searchFrom(geometry_msgs::Point position){$/;"	f	class:frontier_exploration::FrontierSearch
seed	rrt_exploration/src/mtrand.cpp	/^void MTRand_int32::seed(const unsigned long* array, int size) { \/\/ init by array$/;"	f	class:MTRand_int32
seed	rrt_exploration/src/mtrand.cpp	/^void MTRand_int32::seed(unsigned long s) {  \/\/ init by 32 bit seed$/;"	f	class:MTRand_int32
sendGoal	rrt_exploration/scripts/functions.py	/^	def sendGoal(self,point):$/;"	m	class:robot
sendPathAction	navi_manager/src/PathManager.cpp	/^void PathManager::sendPathAction()$/;"	f	class:PathManager
setDesiredHeading	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setDesiredHeading(double _heading)$/;"	f	class:Dynamic_Manager
setDesiredHeading	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setDesiredHeading(double _heading)$/;"	f	class:MDPManager
setDynNavTarget	navi_manager/src/PathManager.cpp	/^void PathManager::setDynNavTarget()$/;"	f	class:PathManager
setDynamicObs	navi_manager/src/Dynamic_Manager.cpp	/^ void Dynamic_Manager::setDynamicObs(const vector<int> dynamic_obs){$/;"	f	class:Dynamic_Manager
setDynamicObs	navi_manager/src/MDPmanager.cpp	/^ void MDPManager::setDynamicObs(const vector<int> dynamic_obs){$/;"	f	class:MDPManager
setFinalNavTarget	navi_manager/src/PathManager.cpp	/^int PathManager::setFinalNavTarget()$/;"	f	class:PathManager
setGoalConfig	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setGoalConfig( const vector<int> _Goal )$/;"	f	class:Dynamic_Manager
setGoalConfig	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setGoalConfig( const vector<int> _Goal )$/;"	f	class:MDPManager
setHeight	navi_manager/src/MapParam.cpp	/^void MapParam::setHeight(int height_)$/;"	f	class:MapParam
setHumanObs	navi_manager/src/Dynamic_Manager.cpp	/^ void Dynamic_Manager::setHumanObs(const vector<int> humans){$/;"	f	class:Dynamic_Manager
setHumanObs	navi_manager/src/MDPmanager.cpp	/^ void MDPManager::setHumanObs(const vector<int> humans){$/;"	f	class:MDPManager
setNavTarget	navi_manager/src/PathManager.cpp	/^void PathManager::setNavTarget()$/;"	f	class:PathManager
setNavTarget_pub	navi_manager/include/PathManager.h	/^ 	ros::Publisher setNavTarget_pub;$/;"	m	class:PathManager
setNavTarget_pub	navi_service/include/navi_service_node.h	/^	ros::Publisher setNavTarget_pub;$/;"	m	class:villa_navi_srv
setNavTarget_pub	navi_service/src/clicked_navi_test.cpp	/^  ros::Publisher setNavTarget_pub;$/;"	m	class:click_navi_manager	file:
setPMapParam	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setPMapParam(MapParam* _pMapParam)$/;"	f	class:Dynamic_Manager
setPMapParam	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setPMapParam(MapParam* _pMapParam)$/;"	f	class:MDPManager
setPMapParam	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::setPMapParam(MapParam* _pMapParam)$/;"	f	class:Dynamic_window
setPath	navi_manager/src/PathManager.cpp	/^void PathManager::setPath(const nav_msgs::Path::ConstPtr& msg)$/;"	f	class:PathManager
setResolution	navi_manager/src/MapParam.cpp	/^void MapParam::setResolution(double res_)$/;"	f	class:MapParam
setStartConfig	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setStartConfig( const vector<int> _Start)$/;"	f	class:Dynamic_Manager
setStartConfig	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setStartConfig( const vector<int> _Start)$/;"	f	class:MDPManager
setStaticObs	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setStaticObs(const vector<int> static_obs)$/;"	f	class:Dynamic_Manager
setStaticObs	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setStaticObs(const vector<int> static_obs)$/;"	f	class:MDPManager
setViewpointTarget	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::setViewpointTarget(const std::vector<double> pos)$/;"	f	class:Dynamic_Manager
setViewpointTarget	navi_manager/src/PathManager.cpp	/^void PathManager::setViewpointTarget(const std::vector<double> pos)$/;"	f	class:PathManager
setViewpointTarget	navi_service/src/navi_service_node.cpp	/^void villa_navi_srv::setViewpointTarget(const std::vector<double> pos)$/;"	f	class:villa_navi_srv
setWidth	navi_manager/src/MapParam.cpp	/^void MapParam::setWidth (int Width_)$/;"	f	class:MapParam
set_Cell_Info	navi_manager/src/MapParam.cpp	/^void MapParam::set_Cell_Info(vector<int> _inputCellInfo)$/;"	f	class:MapParam
set_NearestHuman_V	navi_manager/src/MapParam.cpp	/^void MapParam::set_NearestHuman_V(vector<float> _NearestHuman_V)$/;"	f	class:MapParam
set_OCC_Info	navi_manager/src/MapParam.cpp	/^void MapParam::set_OCC_Info(vector<int> _inputOCCInfo)$/;"	f	class:MapParam
set_RobotHeading_V	navi_manager/src/MapParam.cpp	/^void MapParam::set_RobotHeading_V(vector<float> _RobotHeading_V)$/;"	f	class:MapParam
set_Robot_Info	navi_manager/src/MapParam.cpp	/^void MapParam::set_Robot_Info(vector<int> _inputRobotInfo)$/;"	f	class:MapParam
set_State_Distance	navi_manager/src/MapParam.cpp	/^void MapParam::set_State_Distance(vector<float> _State_Distance)$/;"	f	class:MapParam
set_State_Type	navi_manager/src/MapParam.cpp	/^void MapParam::set_State_Type(vector<int> _State_Type)$/;"	f	class:MapParam
setpub_path	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setpub_path()$/;"	f	class:MDPManager
setstaticGoal	navi_manager/src/MDPmanager.cpp	/^void MDPManager::setstaticGoal()$/;"	f	class:MDPManager
sig_handler	navi_service/src/service_test.cpp	/^void sig_handler(int sig)$/;"	f
sign	rrt_exploration/src/functions.cpp	/^float sign(float n)$/;"	f
size_x_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    unsigned int size_x_ , size_y_;$/;"	m	class:frontier_exploration::FrontierSearch
size_y_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    unsigned int size_x_ , size_y_;$/;"	m	class:frontier_exploration::FrontierSearch
split_size	navi_service/src/map_checker.cpp	/^  int split_size;$/;"	m	class:Map_Checker	file:
split_size	navi_service/src/obstacle_checker.cpp	/^  int split_size;$/;"	m	class:Obstacle_Checker	file:
srBSpline	navi_manager/include/srBSpline.h	/^class srBSpline$/;"	c
srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::srBSpline( const srBSpline& T )$/;"	f	class:srBSpline
srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::srBSpline( int Degree, int NumCPs, double* CPs, double Ti, double Tf, bool KnotRepeat \/*= true *\/ )$/;"	f	class:srBSpline
srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::srBSpline( int Degree, int NumCPs, double* CPs, int NumKnots, double* Knots )$/;"	f	class:srBSpline
srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::srBSpline( int NumCPs, double Ti, double Tf, int Degree, bool KnotRepeat \/*= true*\/ )$/;"	f	class:srBSpline
srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::srBSpline( void )$/;"	f	class:srBSpline
srUtils	navi_manager/include/utils.h	/^class srUtils$/;"	c
srv_time	navi_service/src/map_checker.cpp	/^  double srv_time; $/;"	m	class:Map_Checker	file:
srv_time	navi_service/src/obstacle_checker.cpp	/^  double srv_time; $/;"	m	class:Obstacle_Checker	file:
start	rrt_exploration/scripts/functions.py	/^	start = PoseStamped()$/;"	v	class:robot
state	rrt_exploration/include/mtrand.h	/^  static unsigned long state[n]; \/\/ state vector array$/;"	m	class:MTRand_int32
state	rrt_exploration/src/mtrand.cpp	/^unsigned long MTRand_int32::state[n] = {0x0UL};$/;"	m	class:MTRand_int32	file:
state_callback	navi_manager/scripts/base_move.py	/^    def state_callback(self,data):$/;"	m	class:BaseMoveCBA
static_mapCallback	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::static_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Dynamic_Manager
static_mapCallback	navi_manager/src/MDPmanager.cpp	/^void MDPManager::static_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:MDPManager
static_mapCallback	navi_manager/src/dynamic_window.cpp	/^void Dynamic_window::static_mapCallback(const nav_msgs::OccupancyGrid::ConstPtr& msg)$/;"	f	class:Dynamic_window
success_	frontier_exploration/src/explore_server.cpp	/^    bool success_, moving_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
sum_	navi_service/src/map_checker.cpp	/^  float sum_, sum_sq_;$/;"	m	class:Map_Checker	file:
sum_	navi_service/src/obstacle_checker.cpp	/^  float sum_, sum_sq_;$/;"	m	class:Obstacle_Checker	file:
sum_sq_	navi_service/src/map_checker.cpp	/^  float sum_, sum_sq_;$/;"	m	class:Map_Checker	file:
sum_sq_	navi_service/src/obstacle_checker.cpp	/^  float sum_, sum_sq_;$/;"	m	class:Obstacle_Checker	file:
t_	navi_manager/src/base_conti_actionlib.cpp	/^std::vector<double> t_;$/;"	v
target_sub	navi_service/src/map_checker.cpp	/^  ros::Subscriber target_sub;$/;"	m	class:Map_Checker	file:
target_sub	navi_service/src/obstacle_checker.cpp	/^  ros::Subscriber target_sub;$/;"	m	class:Obstacle_Checker	file:
temp_targetpose	frontier_exploration/src/explore_server.cpp	/^    geometry_msgs::Pose temp_targetpose;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
tf_buffer_	navi_manager/include/PathManager.h	/^ 	tf2_ros::Buffer tf_buffer_;$/;"	m	class:PathManager
tf_listener_	frontier_exploration/include/frontier_exploration/bounded_explore_layer.h	/^    tf::TransformListener tf_listener_;$/;"	m	class:frontier_exploration::BoundedExploreLayer
tf_listener_	frontier_exploration/src/explore_server.cpp	/^    tf::TransformListener tf_listener_;$/;"	m	class:frontier_exploration::FrontierExplorationServer	file:
topic	navi_manager/scripts/human_marker.py	/^topic = 'human_target'$/;"	v
topic_array	navi_manager/scripts/human_marker.py	/^topic_array = 'human_boxes'$/;"	v
topic_array	navi_manager/scripts/people_marker.py	/^topic_array = 'human_poses_boxes'$/;"	v
travel_point_	frontier_exploration/include/frontier_exploration/frontier_search.h	/^    std::string travel_point_;$/;"	m	class:frontier_exploration::FrontierSearch
trigger	navi_manager/scripts/wrist	/^def trigger(req):$/;"	f
twiddle	rrt_exploration/include/mtrand.h	/^inline unsigned long MTRand_int32::twiddle(unsigned long u, unsigned long v) {$/;"	f	class:MTRand_int32
unvalid	rrt_exploration/scripts/functions.py	/^def unvalid(mapData,pt):$/;"	f
updateBoundaryPolygon	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::updateBoundaryPolygon(geometry_msgs::PolygonStamped polygon_stamped){$/;"	f	class:frontier_exploration::BoundedExploreLayer
updateBoundaryPolygonService	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    bool BoundedExploreLayer::updateBoundaryPolygonService(frontier_exploration::UpdateBoundaryPolygon::Request &req, frontier_exploration::UpdateBoundaryPolygon::Response &res){$/;"	f	class:frontier_exploration::BoundedExploreLayer
updateBounds	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::updateBounds(double robot_x, double robot_y, double robot_yaw, double* min_x,$/;"	f	class:frontier_exploration::BoundedExploreLayer
updateCosts	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::updateCosts(costmap_2d::Costmap2D& master_grid, int min_i, int min_j, int max_i, int max_j){$/;"	f	class:frontier_exploration::BoundedExploreLayer
updateMap	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::updateMap(vector<int>& localmap_, vector<int>& local_start, vector<int>& local_goal)$/;"	f	class:Dynamic_Manager
updateMap	navi_manager/src/MDPmanager.cpp	/^void MDPManager::updateMap(vector<int>& localmap_, vector<int>& local_start, vector<int>& local_goal)$/;"	f	class:MDPManager
updateUprimePi	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::updateUprimePi(int state_id)$/;"	f	class:Dynamic_Manager
updateUprimePi	navi_manager/src/MDPmanager.cpp	/^void MDPManager::updateUprimePi(int state_id)$/;"	f	class:MDPManager
update_human_occ_belief_scan	navi_manager/src/Dynamic_Manager.cpp	/^void Dynamic_Manager::update_human_occ_belief_scan()$/;"	f	class:Dynamic_Manager
viewTarget	navi_manager/include/Dynamic_Manager.h	/^    std::vector<double> viewTarget;$/;"	m	class:Dynamic_Manager
viewTarget	navi_manager/include/PathManager.h	/^	std::vector<double> viewTarget;$/;"	m	class:PathManager
viewTarget_visual_pub	navi_manager/include/Dynamic_Manager.h	/^    ros::Publisher  viewTarget_visual_pub; $/;"	m	class:Dynamic_Manager
viewTarget_visual_pub	navi_manager/include/PathManager.h	/^ 	ros::Publisher viewTarget_visual_pub;$/;"	m	class:PathManager
viewpub_iters	navi_manager/include/Dynamic_Manager.h	/^    int viewpub_iters;$/;"	m	class:Dynamic_Manager
viewpub_iters	navi_manager/include/PathManager.h	/^	int viewpub_iters;$/;"	m	class:PathManager
villa_navi_srv	navi_service/include/navi_service_node.h	/^class villa_navi_srv{$/;"	c
villa_navi_srv	navi_service/src/navi_service_node.cpp	/^villa_navi_srv::villa_navi_srv(){$/;"	f	class:villa_navi_srv
visiblie_idx_set	navi_manager/include/Dynamic_Manager.h	/^	std::vector<int> visiblie_idx_set;$/;"	m	class:Dynamic_Manager
visiblie_idx_set	navi_manager/include/dynamic_window.h	/^	std::vector<int> visiblie_idx_set;$/;"	m	class:Dynamic_window
visualizeFrontiers	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    void BoundedExploreLayer::visualizeFrontiers(const std::vector<Frontier>& frontiers)$/;"	f	class:frontier_exploration::BoundedExploreLayer
vizPubCb	frontier_exploration/src/explore_client.cpp	/^    void vizPubCb(){$/;"	f	class:frontier_exploration::FrontierExplorationClient	file:
waiting_for_center_	frontier_exploration/src/explore_client.cpp	/^    bool waiting_for_center_;$/;"	m	class:frontier_exploration::FrontierExplorationClient	file:
wrist_trigger_server	navi_manager/scripts/wrist	/^def wrist_trigger_server():$/;"	f
x_	navi_manager/include/PathManager.h	/^	std::vector<double> x_;$/;"	m	class:PathManager
x_	navi_manager/src/base_actionlib.cpp	/^std::vector<double> x_;$/;"	v
x_	navi_manager/src/base_conti_actionlib.cpp	/^std::vector<double> x_;$/;"	v
xdim	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
xdim	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
y_	navi_manager/include/PathManager.h	/^	std::vector<double> y_;$/;"	m	class:PathManager
y_	navi_manager/src/base_actionlib.cpp	/^std::vector<double> y_;$/;"	v
y_	navi_manager/src/base_conti_actionlib.cpp	/^std::vector<double> y_;$/;"	v
yawOfVector	frontier_exploration/include/frontier_exploration/geometry_tools.h	/^  double yawOfVector(const T &origin, const S &end){$/;"	f	namespace:frontier_exploration
ydim	rrt_exploration/src/global_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
ydim	rrt_exploration/src/local_rrt_detector.cpp	/^float xdim,ydim,resolution,Xstartx,Xstarty,init_map_x,init_map_y;$/;"	v
~BoundedExploreLayer	frontier_exploration/plugins/bounded_explore_layer.cpp	/^    BoundedExploreLayer::~BoundedExploreLayer(){$/;"	f	class:frontier_exploration::BoundedExploreLayer
~Dynamic_Manager	navi_manager/src/Dynamic_Manager.cpp	/^Dynamic_Manager::~Dynamic_Manager()$/;"	f	class:Dynamic_Manager
~Dynamic_window	navi_manager/src/dynamic_window.cpp	/^Dynamic_window::~Dynamic_window()$/;"	f	class:Dynamic_window
~MDPManager	navi_manager/src/MDPmanager.cpp	/^MDPManager::~MDPManager()$/;"	f	class:MDPManager
~MTRand	rrt_exploration/include/mtrand.h	/^  ~MTRand() {}$/;"	f	class:MTRand
~MTRand53	rrt_exploration/include/mtrand.h	/^  ~MTRand53() {}$/;"	f	class:MTRand53
~MTRand_closed	rrt_exploration/include/mtrand.h	/^  ~MTRand_closed() {}$/;"	f	class:MTRand_closed
~MTRand_int32	rrt_exploration/include/mtrand.h	/^  virtual ~MTRand_int32() {} \/\/ destructor$/;"	f	class:MTRand_int32
~MTRand_open	rrt_exploration/include/mtrand.h	/^  ~MTRand_open() {}$/;"	f	class:MTRand_open
~MapParam	navi_manager/src/MapParam.cpp	/^MapParam::~MapParam()$/;"	f	class:MapParam
~Map_Checker	navi_service/src/map_checker.cpp	/^  ~Map_Checker(void)$/;"	f	class:Map_Checker
~Obstacle_Checker	navi_service/src/obstacle_checker.cpp	/^  ~Obstacle_Checker(void)$/;"	f	class:Obstacle_Checker
~PathManager	navi_manager/src/PathManager.cpp	/^PathManager::~PathManager()$/;"	f	class:PathManager
~click_navi_manager	navi_service/src/clicked_navi_test.cpp	/^  ~click_navi_manager(){}$/;"	f	class:click_navi_manager
~srBSpline	navi_manager/src/srBSpline.cpp	/^srBSpline::~srBSpline()$/;"	f	class:srBSpline
~villa_navi_srv	navi_service/src/navi_service_node.cpp	/^villa_navi_srv::~villa_navi_srv(){}$/;"	f	class:villa_navi_srv
